{"version":3,"file":"phylotree.js","sources":["../src/formats/nexml.js","../src/nodes.js","../src/formats/newick.js","../src/formats/nexus.js","../src/formats/phyloxml.js","../src/formats/beast.js","../src/formats/registry.js","../src/export.js","../src/max-parsimony.js","../src/traversal.js","../src/branches.js","../src/rooting.js","../src/render/coordinates.js","../src/render/radial.js","../src/render/cartesian.js","../src/render/helpers.js","../src/render/options.js","../src/render/nodes.js","../src/render/clades.js","../src/render/edges.js","../src/render/events.js","../src/render/menus.js","../src/render/draw.js","../src/main.js","../src/metrics/pairwise-distances.js","../src/metrics/sackins.js","../src/metrics/center-of-tree.js","../src/metrics/compute-midpoint.js","../src/metrics/root-to-tip.js","../src/extract-dates.js","../src/clustering/cluster-picker.js","../src/clustering/phylopart.js"],"sourcesContent":["import * as _ from \"underscore\";\n//import { parseString } from \"xml2js\";\n\nvar nexml_parser = function(xml_string, options) {\n  var trees;\n  parseString(xml_string, function(error, xml) {\n    trees = xml[\"nex:nexml\"].trees[0].tree.map(function(nexml_tree) {\n      var node_list = nexml_tree.node.map(d => d.$),\n        node_hash = node_list.reduce(function(a, b) {\n          b.edges = [];\n          b.name = b.id;\n          a[b.id] = b;\n          return a;\n        }, {}),\n        roots = node_list.filter(d => d.root),\n        root_id = roots > 0 ? roots[0].id : node_list[0].id;\n      node_hash[root_id].name = \"root\";\n\n      nexml_tree.edge.map(d => d.$).forEach(function(edge) {\n        node_hash[edge.source].edges.push(edge);\n      });\n\n      function parseNexml(node, index) {\n        if (node.edges) {\n          var targets = _.pluck(node.edges, \"target\");\n          node.children = _.values(_.pick(node_hash, targets));\n          node.children.forEach(function(child, i) {\n            child.attribute = node.edges[i].length || \"\";\n          });\n          node.children.forEach(parseNexml);\n          node.annotation = \"\";\n        }\n      }\n\n      parseNexml(node_hash[root_id]);\n      return node_hash[root_id];\n    });\n  });\n  return trees;\n};\n\nexport default nexml_parser;\n","import * as _ from \"underscore\";\n\n// These methods are part of the Phylotree object\n\nexport function graftANode(graft_at, new_child, new_parent, lengths) {\n\n  let nodes = this.nodes.descendants();\n\n  if (graft_at.parent) {\n    let node_index = nodes.indexOf(graft_at);\n\n    if (node_index >= 0) {\n      let parent_index = graft_at.parent.children.indexOf(graft_at);\n\n      let new_split = {\n          name: new_parent,\n          parent: graft_at.parent,\n          attribute: lengths ? lengths[2] : null,\n          original_child_order: graft_at[\"original_child_order\"]\n        },\n        new_node = {\n          name: new_child,\n          parent: new_split,\n          attribute: lengths ? lengths[1] : null,\n          original_child_order: 2\n        };\n\n      new_split[\"children\"] = [graft_at, new_node];\n      graft_at[\"parent\"].children[parent_index] = new_split;\n      graft_at.parent = new_split;\n      graft_at[\"attribute\"] = lengths ? lengths[0] : null;\n      graft_at[\"original_child_order\"] = 1;\n    }\n  }\n\n  return this;\n\n}\n\n/**\n * Delete a given node.\n *\n * @param {Node} The node to be deleted, or the index of such a node.\n * @returns The current ``phylotree``.\n */\nexport function deleteANode(index) {\n  let nodes = this.nodes.descendants();\n\n  if (typeof index != \"number\") {\n    return this.deleteANode(nodes.indexOf(index));\n  }\n\n  if (index > 0 && index < nodes.length) {\n    let node = nodes[index];\n\n    if (node.parent) {\n      // can only delete nodes that are not the root\n      let delete_me_idx = node.parent.children.indexOf(node);\n\n      if (delete_me_idx >= 0) {\n        nodes.splice(index, 1);\n\n        if (node.children) {\n          node.children.forEach(function(d) {\n            d[\"original_child_order\"] = node.parent.children.length;\n            node.parent.children.push(d);\n            d.parent = node.parent;\n          });\n        }\n\n        if (node.parent.children.length > 2) {\n          node.parent.children.splice(delete_me_idx, 1);\n        } else {\n          if (node.parent.parent) {\n            node.parent.parent.children[\n              node.parent.parent.children.indexOf(node.parent)\n            ] =\n              node.parent.children[1 - delete_me_idx];\n            node.parent.children[1 - delete_me_idx].parent = node.parent.parent;\n            nodes.splice(nodes.indexOf(node.parent), 1);\n          } else {\n            nodes.splice(0, 1);\n            nodes.parent = null;\n            delete nodes.data[\"attribute\"];\n            delete nodes.data[\"annotation\"];\n            delete nodes.data[\"original_child_order\"];\n            nodes.name = \"root\";\n            nodes.data.name = \"root\";\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\n/**\n * Get the tips of the tree\n * @returns {Array} Nodes in the current ``phylotree``.\n */\nexport function getTips() {\n  // get all nodes that have no nodes\n  return _.filter(this.nodes.descendants(), n => {\n    return !_.has(n, \"children\");\n  });\n}\n\n/**\n * Get the internal nodes of the tree\n * @returns {Array} Nodes in the current ``phylotree``.\n */\nexport function getInternals() {\n  // get all nodes that have no nodes\n  return _.filter(this.nodes.descendants(), n => {\n    return _.has(n, \"children\");\n  });\n}\n\n\n/**\n * Get the root node.\n *\n * @returns the current root node of the ``phylotree``.\n */\nexport function getRootNode() {\n  return this.nodes;\n}\n\n/**\n * Get an array of all nodes.\n * @returns {Array} Nodes in the current ``phylotree``.\n */\nexport function getNodes() {\n  return this.nodes;\n}\n\n/**\n * Get a node by name.\n *\n * @param {String} name Name of the desired node.\n * @returns {Node} Desired node.\n */\nexport function getNodeByName(name) {\n  return _.filter(this.nodes.descendants(), d => {\n    return d.data.name == name;\n  })[0];\n}\n\n/**\n * Add attributes to nodes. New attributes will be placed in the\n * ``annotations`` key of any nodes that are matched.\n *\n * @param {Object} attributes An object whose keys are the names of nodes\n * to modify, and whose values are the new attributes to add.\n */\nexport function assignAttributes(attributes) {\n  //return nodes;\n  // add annotations to each matching node\n  _.each(this.nodes, function(d) {\n    if (_.indexOf(_.keys(attributes), d.name) >= 0) {\n      d[\"annotations\"] = attributes[d.name];\n    }\n  });\n}\n\n/**\n * Determine if a given node is a leaf node.\n *\n * @param {Node} A node in a tree.\n * @returns {Bool} Whether or not the node is a leaf node.\n */\nexport function isLeafNode(node) {\n  return !_.has(node, \"children\")\n}\n\n/**\n * Update a given key name in each node.\n *\n * @param {String} old_key The old key name.\n * @param {String} new_key The new key name.\n * @returns The current ``this``.\n */\nexport function updateKeyName(old_key, new_key) {\n  this.nodes.each(function(n) {\n    if (old_key in n) {\n      if (new_key) {\n        n[new_key] = n[old_key];\n      }\n      delete n[old_key];\n    }\n  });\n\n  return this;\n}\n\nexport function clearInternalNodes(respect) {\n  if (!respect) {\n    this.nodes.each(d => {\n      if (!isLeafNode(d)) {\n\n        // TODO: Move away from storing attribute data as root (BREAKS occasionally with d3>3)\n        d[this.selection_attribute_name] = false;\n\n        if(!d.data.traits) {\n          d.data.traits = {};\n        }\n        d.data.traits[this.selection_attribute_name] = d[this.selection_attribute_name];\n\n      }\n    });\n  }\n}\n\n\n","import { isLeafNode } from \"../nodes\";\n\n/**\n * Parses a Newick string into an equivalent JSON representation that is\n * suitable for consumption by ``hierarchy``.\n *\n * Optionally accepts bootstrap values. Currently supports Newick strings with or without branch lengths,\n * as well as tagged trees such as\n *  ``(a,(b{TAG},(c{TAG},d{ANOTHERTAG})))``\n *\n * @param {String} nwk_str - A string representing a phylogenetic tree in Newick format.\n * @param {Object} bootstrap_values.\n * @returns {Object} An object with keys ``json`` and ``error``.\n */\n\nfunction newickParser(nwk_str, options={}) {\n  const bootstrap_values = true,\n    int_or_float = /^-?\\d+(\\.\\d+)?$/;\n  let left_delimiter = options.left_delimiter ||  '{',\n    right_delimiter = options.right_delimiter ||  '}';\n  let clade_stack = [];\n\n  function addNewTreeLevel() {\n    let new_level = {\n      name: null\n    };\n\n    let the_parent = clade_stack[clade_stack.length - 1];\n\n    if (!(\"children\" in the_parent)) {\n      the_parent[\"children\"] = [];\n    }\n\n    clade_stack.push(new_level);\n\n    the_parent[\"children\"].push(clade_stack[clade_stack.length - 1]);\n\n    clade_stack[clade_stack.length - 1][\"original_child_order\"] =\n      the_parent[\"children\"].length;\n  }\n\n  function finishNodeDefinition() {\n    let this_node = clade_stack.pop();\n\n    this_node[\"name\"] = current_node_name;\n\n    if (bootstrap_values && \"children\" in this_node) {\n      this_node[\"bootstrap_values\"] = current_node_name;\n    } else {\n      this_node[\"name\"] = current_node_name;\n    }\n\n    this_node[\"attribute\"] = current_node_attribute;\n    if(left_delimiter == \"[\" && current_node_annotation.includes(\"&&NHX\")) {\n      current_node_annotation\n        .split(':')\n        .slice(1)\n        .forEach(annotation => {\n          const [key, value] = annotation.split('=');\n          this_node[key] = int_or_float.test(value) ? +value : value;\n        });\n    } else {\n      this_node[\"annotation\"] = current_node_annotation;\n    }\n\n    current_node_name = \"\";\n    current_node_attribute = \"\";\n    current_node_annotation = \"\";\n  }\n\n  function generateError(location) {\n    return {\n      json: null,\n      error:\n        \"Unexpected '\" +\n        nwk_str[location] +\n        \"' in '\" +\n        nwk_str.substring(location - 20, location + 1) +\n        \"[ERROR HERE]\" +\n        nwk_str.substring(location + 1, location + 20) +\n        \"'\"\n    };\n  }\n\n  let automaton_state = 0;\n  let current_node_name = \"\";\n  let current_node_attribute = \"\";\n  let current_node_annotation = \"\";\n  let quote_delimiter = null;\n\n  let name_quotes = {\n    \"'\": 1,\n    '\"': 1\n  };\n\n  let tree_json = {\n    name: \"root\"\n  };\n\n  clade_stack.push(tree_json);\n\n  var space = /\\s/;\n\n  for (var char_index = 0; char_index < nwk_str.length; char_index++) {\n    try {\n      var current_char = nwk_str[char_index];\n      switch (automaton_state) {\n        case 0: {\n          // look for the first opening parenthesis\n          if (current_char == \"(\") {\n            addNewTreeLevel();\n            automaton_state = 1; // expecting node name\n          }\n          break;\n        }\n        case 1: // name\n        case 3: {\n          // branch length\n          // reading name\n          if (current_char == \":\") {\n            automaton_state = 3;\n          } else if (current_char == \",\" || current_char == \")\") {\n            try {\n              finishNodeDefinition();\n              automaton_state = 1;\n              if (current_char == \",\") {\n                addNewTreeLevel();\n              }\n            } catch (e) {\n              return generateError(char_index);\n            }\n          } else if (current_char == \"(\") {\n            if (current_node_name.length > 0) {\n              return generateError(char_index);\n            } else {\n              addNewTreeLevel();\n            }\n          } else if (current_char in name_quotes) {\n            if (\n              automaton_state == 1 &&\n              current_node_name.length === 0 &&\n              current_node_attribute.length === 0 &&\n              current_node_annotation.length === 0\n            ) {\n              automaton_state = 2;\n              quote_delimiter = current_char;\n              continue;\n            }\n            return generateError(char_index);\n          } else {\n            if (current_char == left_delimiter) {\n              if (current_node_annotation.length) {\n                return generateError(char_index);\n              } else {\n                automaton_state = 4;\n              }\n            } else {\n              if (automaton_state == 3) {\n                current_node_attribute += current_char;\n              } else {\n                if (space.test(current_char)) {\n                  continue;\n                }\n                if (current_char == \";\") {\n                  // semicolon terminates tree definition\n                  char_index = nwk_str.length;\n                  break;\n                }\n                current_node_name += current_char;\n              }\n            }\n          }\n\n          break;\n        }\n        case 2: {\n          // inside a quoted expression\n          if (current_char == quote_delimiter) {\n            if (char_index < nwk_str.length - 1) {\n              if (nwk_str[char_index + 1] == quote_delimiter) {\n                char_index++;\n                current_node_name += quote_delimiter;\n                continue;\n              }\n            }\n            quote_delimiter = 0;\n            automaton_state = 1;\n            continue;\n          } else {\n            current_node_name += current_char;\n          }\n          break;\n        }\n        case 4: {\n          // inside a comment / attribute\n          if (current_char == right_delimiter) {\n            automaton_state = 3;\n          } else {\n            if (current_char == left_delimiter) {\n              return generateError(char_index);\n            }\n            current_node_annotation += current_char;\n          }\n          break;\n        }\n      }\n    } catch (e) {\n      return generateError(char_index);\n    }\n  }\n\n  if (clade_stack.length != 1) {\n    return generateError(nwk_str.length - 1);\n  }\n\n  return {\n    json: tree_json,\n    error: null\n  };\n}\n\n/**\n * Return Newick string representation of a phylotree.\n *\n * @param {Function} annotator - Function to apply to each node, determining\n * what label is written (optional).\n * @returns {String} newick - Phylogenetic tree serialized as a Newick string.\n */\n\n// TODO: break this out into two seperate functions\nexport function getNewick(annotator) {\n\n  let self = this;\n\n  if (!annotator) annotator = d => d.data.name;\n\n  function nodeDisplay(n) {\n    if (!isLeafNode(n)) {\n      element_array.push(\"(\");\n      n.children.forEach(function(d, i) {\n        if (i) {\n          element_array.push(\",\");\n        }\n        nodeDisplay(d);\n      });\n      element_array.push(\")\");\n    }\n\n    if(n.data.name != 'root') {\n      element_array.push(n.data.name);\n    }\n    element_array.push(annotator(n));\n\n    let bl = self.branch_length_accessor(n);\n\n    if (bl !== undefined) {\n      element_array.push(\":\" + bl);\n    }\n  }\n\n  let element_array = [];\n  annotator = annotator || \"\";\n  nodeDisplay(this.nodes);\n\n  return element_array.join(\"\")+\";\";\n\n}\n\nexport default newickParser;\n","import * as _ from \"underscore\";\nimport {default as newickParser} from \"./newick\";\n\nexport function parseAnnotations (buf) {\n\n  let str = buf;\n  let index = str.toUpperCase().indexOf('BEGIN DATA;');\n  let data = str.slice(index);\n\n  if(data.length < 2) {\n    return '';\n  }\n\n  index = data.toUpperCase().indexOf('END;');\n  let data_str = data.slice(0, index);\n\n  // split on semicolon\n  data = _.map(data_str.split(';'), d => { return d.trim() } );\n\n  // get dimensions\n  let dimensions = _.filter(data, d => {return d.toUpperCase().startsWith('DIMENSION')}); \n  dimensions = dimensions[0].split(' ');\n  dimensions = _.object(_.map(_.rest(dimensions), d => { return d.split('=') }));\n\n  // get formats\n  let format = _.filter(data, d => {return d.toUpperCase().startsWith('FORMAT')}); \n  format = format[0].split(' ');\n  format = _.object(_.map(_.rest(format), d => { return d.split('=') }));\n  format.symbols = _.reject(format.symbols.split(\"\"), d => d=='\"');\n\n  // get character matrix\n  let matrix = _.filter(data, d => {return d.toUpperCase().startsWith('MATRIX')}); \n  matrix = matrix[0].split('\\n')\n  matrix = _.object(_.map(_.rest(matrix), d=> { return _.compact(d.split(' ')) }));\n\n  // create all possible states for matrix\n  matrix = _.mapObject(matrix, (v,k) => { \n\n    if(v == '?') {\n      return format.symbols\n    }\n    else { \n      return Array(v)\n    }\n  \n  });\n\n  return { 'dimensions' : dimensions, 'format' : format, 'matrix' : matrix }\n\n}\n\n/**\n *  Loads annotations from a nexus-formatted buffer and annotates existing tree\n *  nodes appropriately.\n *\n * @param {Object} tree - Instatiated phylotree\n * @param {String} NEXUS string\n * @returns {Object} Annotations\n */\nexport function loadAnnotations(tree, label, annotations) {\n\n  // if filename, then load from filesystem\n  _.each(tree.getTips(), d => { d.data[\"test\"] = annotations.matrix[d.data.name] });\n\n  // decorate nodes with annotations\n\n}\n\nexport default function loadTree(buf) {\n\n  // if filename, then load from filesystem\n  // Parse first tree from NEXUS file and send to newickParser\n\n  // Make all upper case\n  let str = buf;\n\n  // Get TREE block\n  let index = str.toUpperCase().indexOf('BEGIN TREES;');\n  let split = str.slice(index);\n\n  if(split.length < 2) {\n    return '';\n  }\n\n  index = split.toUpperCase().indexOf('END;');\n  let tree_str = split.slice(0, index);\n\n  // Filter lines that start with TREE\n  let trees = tree_str.split('\\n');\n  trees = _.filter(trees, d => { return d.trim().toUpperCase().startsWith('TREE') });\n\n  // Identify start of newick string\n  return newickParser(trees[0]);\n\n}\n\n","// Changes XML to JSON\n// Modified version from here: http://davidwalsh.name/convert-xml-json\nfunction xmlToJson(xml) {\n\n\t// Create the return object\n\tvar obj = {};\n\n\tif (xml.nodeType == 1) { // element\n\t\t// do attributes\n\t\tif (xml.attributes.length > 0) {\n\t\tobj[\"@attributes\"] = {};\n\t\t\tfor (var j = 0; j < xml.attributes.length; j++) {\n\t\t\t\tvar attribute = xml.attributes.item(j);\n\t\t\t\tobj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n\t\t\t}\n\t\t}\n\t} else if (xml.nodeType == 3) { // text\n\t\tobj = xml.nodeValue;\n\t}\n\n\t// do children\n\t// If just one text node inside\n\tif (xml.hasChildNodes() && xml.childNodes.length === 1 && xml.childNodes[0].nodeType === 3) {\n\t\tobj = xml.childNodes[0].nodeValue;\n\t}\n\telse if (xml.hasChildNodes()) {\n\t\tfor(var i = 0; i < xml.childNodes.length; i++) {\n\t\t\tvar item = xml.childNodes.item(i);\n\t\t\tvar nodeName = item.nodeName;\n\t\t\tif (typeof(obj[nodeName]) == \"undefined\") {\n\t\t\t\tobj[nodeName] = xmlToJson(item);\n\t\t\t} else {\n\t\t\t\tif (typeof(obj[nodeName].push) == \"undefined\") {\n\t\t\t\t\tvar old = obj[nodeName];\n\t\t\t\t\tobj[nodeName] = [];\n\t\t\t\t\tobj[nodeName].push(old);\n\t\t\t\t}\n\t\t\t\tobj[nodeName].push(xmlToJson(item));\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nvar phyloxml_parser = function(xml, options) {\n\n  function parsePhyloxml(node, index) {\n    if (node.clade) {\n      node.clade.forEach(parsePhyloxml);\n      node.children = node.clade;\n      delete node.clade;\n    }\n\n\t\tnode.annotation = 1;\n\t\tnode.attribute = \"0.01\";\n    if (node.branch_length) {\n\t\t\tnode.attribute = node.branch_length;\n    }\n    if (node.taxonomy) {\n      node.name = node.taxonomy.scientific_name;\n    }\n\n    node.annotation = \"\";\n\n  }\n\n  var tree_json;\n\n  xml = xmlToJson(xml);\n  tree_json = xml.phyloxml.phylogeny.clade;\n  tree_json.name = \"root\";\n  parsePhyloxml(tree_json, 0);\n\n  return {\n    json: tree_json,\n    error: null\n  };\n};\n\nexport default phyloxml_parser;\n","import newickParser from \"./newick\";\n\nexport default function(newick, options) {\n  options.left_delimiter = '[';\n  options.right_delimiter = ']';\n  const parsed_newick = newickParser(newick, options);\n  function parseBeastNode(node) {\n    if(node.annotation) {\n      node.beast = {};\n      const tokens = node.annotation.split(/=|,|{|}/)\n        .filter(token => token);\n      for(var i = 0; i < tokens.length; i+=2) {\n        let key = tokens[i].replace(/&|%/g, '');\n        if(/[a-df-zA-DF-Z]+/.test(tokens[i+2])) {\n          node.beast[key] = +tokens[i+1];\n        } else {\n          node.beast[key] = [+tokens[i+1], +tokens[i+2]];\n          i++;\n        }\n      }\n    }\n    node.annotation = undefined;\n    if(node.children) {\n      node.children.forEach(parseBeastNode);\n    }\n  }\n  parseBeastNode(parsed_newick.json);\n  return parsed_newick;\n}\n","import { default as nexml_parser } from \"./nexml\";\nimport { default as newickParser } from \"./newick\";\nimport { default as nexus_parser } from \"./nexus\";\nimport { default as phyloxml_parser } from \"./phyloxml\";\nimport { default as beast_parser } from \"./beast\";\n\n/* \n * A parser must have two fields, the object and\n * options\n */\nvar format_registry = {\n  nexml: nexml_parser,\n  phyloxml: phyloxml_parser,\n  nexus : nexus_parser,\n  nwk: newickParser,\n  nhx: newickParser,\n  beast: beast_parser\n};\n\nexport default format_registry;\n","import * as _ from \"underscore\";\n\n/**\n * Return CSV of nodes sorted by longest branches.\n *\n * @returns {Array} An array of all tips and associated lengths of the form :\n * [{\n *    name : <tip_name>,\n *    length: <tip_length>\n * }, ...]\n */\n\nexport default function getTipLengths() {\n\n  // Get nodes and branch lengths\n  let self = this;\n  let tips = self.getTips();\n\n  // Transform to name, attribute key-pair and sort by attribute length, descending\n  let toExport = _.map(tips, d => { return {'name' : d.data.name, 'length' : parseFloat(d.data.attribute) } });\n  toExport = _.sortBy(toExport, d=> -d.length)\n  return toExport;\n  \n  \n}\n","import * as _ from \"underscore\";\nimport { isLeafNode } from \"./nodes\";\n\nexport default function maxParsimony(respect_existing, attr_name) {\n\n  function populateMpMatrix(attr_name, d) {\n\n    d.mp = [\n      [0, 0], // score for parent selected / not selected\n      [false, false]\n    ]; // selected or not\n\n    if (isLeafNode(d)) {\n\n      d.mp[1][0] = d.mp[1][1] = d[attr_name] || false;\n      d.mp[0][0] = d.mp[1][0] ? 1 : 0;\n      d.mp[0][1] = 1 - d.mp[0][0];\n\n    } else {\n\n      d.children.forEach(pop_mp_mat);\n\n      var s0 = d.children.reduce(function(p, n) {\n        return n.mp[0][0] + p;\n      }, 0);\n\n      // cumulative children score if this node is 0\n      var s1 = d.children.reduce(function(p, n) {\n        return n.mp[0][1] + p;\n      }, 0);\n\n      // cumulative children score if this node is 1\n      // parent = 0\n\n      if (d[attr_name]) {\n        // respect selected\n        d.mp[0][0] = s1 + 1;\n        d.mp[1][0] = true;\n        d.mp[0][1] = s1;\n        d.mp[1][1] = true;\n      } else {\n        if (s0 < s1 + 1) {\n          d.mp[0][0] = s0;\n          d.mp[1][0] = false;\n        } else {\n          d.mp[0][0] = s1 + 1;\n          d.mp[1][0] = true;\n        }\n\n        // parent = 1\n\n        if (s1 < s0 + 1) {\n          d.mp[0][1] = s1;\n          d.mp[1][1] = true;\n        } else {\n          d.mp[0][1] = s0 + 1;\n          d.mp[1][1] = false;\n        }\n      }\n    }\n  }\n\n  const pop_mp_mat = _.partial(populateMpMatrix, attr_name);\n  pop_mp_mat(this.nodes);\n\n  this.nodes.each(d => {\n    if (d.parent) {\n      d.mp = d.mp[1][d.parent.mp ? 1 : 0];\n    } else {\n      d.mp = d.mp[1][d.mp[0][0] < d.mp[0][1] ? 0 : 1];\n    }\n  });\n\n  this.display.modifySelection((d, callback) => {\n    if (isLeafNode(d.target)) {\n      return d.target[attr_name];\n    }\n    return d.target.mp;\n  });\n\n}\n","import * as _ from \"lodash\";\n\nexport function postOrder(node, callback, backtrack) {\n\n  let nodes = [node],\n    next = [],\n    children,\n    i,\n    n;\n\n  while ((node = nodes.pop())) {\n    if (!(backtrack && backtrack(node))) {\n      next.push(node), (children = node.children);\n      if (children)\n        for (i = 0, n = children.length; i < n; ++i) {\n          nodes.push(children[i]);\n        }\n    }\n  }\n\n  while ((node = next.pop())) {\n    callback(node);\n  }\n\n  return node;\n\n}\n\nexport function preOrder(node, callback, backtrack) {\n  let nodes = [node],\n    children,\n    i;\n\n  while ((node = nodes.pop())) {\n    if (!(backtrack && backtrack(node))) {\n      callback(node), (children = node.children);\n      if (children)\n        for (i = children.length - 1; i >= 0; --i) {\n          nodes.push(children[i]);\n        }\n    }\n  }\n\n  return node;\n}\n\nexport default function inOrder(node, callback, backtrack) {\n  let current,\n    next = [node],\n    children,\n    i,\n    n;\n\n  do {\n    (current = next.reverse()), (next = []);\n    while ((node = current.pop())) {\n      if (!(backtrack && backtrack(node))) {\n        callback(node), (children = node.children);\n        if (children)\n          for (i = 0, n = children.length; i < n; ++i) {\n            next.push(children[i]);\n          }\n      }\n    }\n  } while (next.length);\n\n  return node;\n}\n\n/**\n * Traverses a tree that represents left-child right-sibling\n * @param {Object} tree -- the phylotree.js tree object \n * @return {Object} An edge list that represents the original multi-way tree\n *\n */\nexport function leftChildRightSibling(root) {\n\n  let declareTrueParent = function(n) {\n\n    if(n.children) {\n      // left child is the child\n      n.children[0].data.multiway_parent = n;\n\n      // right child is the sibling\n      n.children[1].data.multiway_parent = n.parent;\n    }\n\n  }\n\n  // First decorate each node with its true parent node\n  postOrder(root, declareTrueParent);\n\n  // return edge list\n  let edge_list = _.map(root.descendants(), n => { \n\n    let source = n.data.multiway_parent; \n    let name = \"unknown\";\n\n    if(source) {\n      name = source.data.name;\n    }\n\n    // In order to get the true name of the infector/infectee, we must traverse\n    // the tree from the multiway_parents node.\n\n    return {\"source\" : n.data.multiway_parent, \"target\" : n, \"name\": name } });\n\n  // Construct edge list by new parent-child listing\n  return edge_list;\n\n}\n\n\n\n","import * as _ from \"underscore\";\n\n// These methods are part of the Phylotree object\n\nexport function setPartitions(partitions) {\n  this.partitions = partitions;\n}\n\nexport function getPartitions(attributes) {\n  return this.partitions;\n}\n\n/**\n * Returns T/F whether every branch in the tree has a branch length\n *\n * @returns {Object} true if  every branch in the tree has a branch length\n */\nexport default function hasBranchLengths() {\n\n  let bl = this.branch_length;\n\n  if (bl) {\n    return _.every(this.nodes.descendants(), function(node) {\n      return !node.parent || !_.isUndefined(bl(node));\n    });\n\n  }\n\n  return false;\n}\n\n/**\n * Returns branch lengths\n *\n * @returns {Array} array of branch lengths\n */\nexport function getBranchLengths() {\n\n  let bl = this.branch_length;\n  return _.map(this.nodes.descendants(), node => { return bl(node)});\n\n}\n\n\nexport function defBranchLengthAccessor(_node, new_length) {\n\n  let _node_data = _node.data;\n  //let _node_data = _node;\n\n  if (\n    \"attribute\" in _node_data &&\n    _node_data[\"attribute\"] &&\n    _node_data[\"attribute\"].length\n  ) {\n\n    if(new_length > 0) {\n      _node_data[\"attribute\"] = String(new_length);\n    }\n\n    let bl = parseFloat(_node_data[\"attribute\"]);\n\n    if (!isNaN(bl)) {\n      return Math.max(0, bl);\n    }\n\n  }\n\n  // Allow for empty branch length at root\n  if(_node_data.name == \"root\") {\n    return 0;\n  }\n\n  console.warn('Undefined branch length at ' + _node_data.name + '!');\n\n  return undefined;\n\n}\n\n/**\n * Get or set branch length accessor.\n *\n * @param {Function} attr Empty if getting, or new branch length accessor if setting.\n * @returns {Object} The branch length accessor if getting, or the current this if setting.\n */\nexport function setBranchLength(attr) {\n  if (!arguments.length) return this.branch_length_accessor;\n  this.branch_length_accessor = attr ? attr : defBranchLengthAccessor;\n  return this;\n}\n\n/**\n * Normalizes branch lengths\n */\nexport function normalize(attr) {\n\n  let bl = this.branch_length;\n\n  let branch_lengths = _.map(this.nodes.descendants(), function(node) {\n    if(bl(node)) {\n    return bl(node);\n    } else {\n      return null;\n    }\n  });\n\n  const max_bl = _.max(branch_lengths);\n  const min_bl = _.min(branch_lengths);\n\n  let scaler = function (x) {\n    return (x - min_bl)/(max_bl - min_bl);\n  }\n\n  _.each(this.nodes.descendants(), (node) => {\n      let len = bl(node);\n      if(len) {\n        bl(node, scaler(len));\n      }     \n  });\n\n  return this;\n\n}\n\n\n/**\n * Scales branch lengths\n *\n * @param {Function} function that scales the branches\n */\nexport function scale(scale_by) {\n\n  let bl = this.branch_length;\n\n  _.each(this.nodes.descendants(), (node) => {\n      let len = bl(node);\n      if(len) {\n        bl(node, scale_by(len));\n      }     \n  });\n\n  return this;\n\n}\n\n/**\n * Get or set branch name accessor.\n *\n * @param {Function} attr (Optional) If setting, a function that accesses a branch name\n * from a node.\n * @returns The ``nodeLabel`` accessor if getting, or the current ``this`` if setting.\n */\nexport function branchName(attr) {\n  if (!arguments.length) return this.nodeLabel;\n  this.nodeLabel = attr;\n  return this;\n}\n","import * as d3 from \"d3\";\nimport * as _ from \"underscore\";\n\n/**\n* Reroot the tree on the given node.\n*\n* @param {Node} node Node to reroot on.\n* @param {fraction} if specified, partition the branch not into 0.5 : 0.5, but according to \n                   the specified fraction\n                   \n* @returns {Phylotree} The current ``phylotree``.\n*/\nexport function reroot(node, fraction) {\n\n  /** TODO add the option to root in the middle of a branch */\n\n  let nodes = this.nodes.copy();\n\n  fraction = fraction !== undefined ? fraction : 0.5;\n\n  if (node.parent) {\n\n    var new_json = d3.hierarchy({\n      name: \"new_root\"\n    });\n    \n    new_json.children = [node.copy()];\n    new_json.data.__mapped_bl = undefined\n\n    nodes.each(n => {\n      n.data.__mapped_bl = this.branch_length_accessor(n);\n    });\n\n    this.setBranchLength(n => {\n      return n.data.__mapped_bl;\n    });\n\n\n    let remove_me = node,\n      current_node = node.parent,\n      stashed_bl = _.noop();\n\n    let apportioned_bl =\n      node.data.__mapped_bl === undefined ? undefined : node.data.__mapped_bl * fraction;\n\n    stashed_bl = current_node.data.__mapped_bl;\n\n    current_node.data.__mapped_bl =\n      node.data.__mapped_bl === undefined\n        ? undefined\n        : node.data.__mapped_bl - apportioned_bl;\n\n    node.data.__mapped_bl = apportioned_bl;\n\n    var remove_idx;\n\n    if (current_node.parent) {\n\n      new_json.children.push(current_node);\n\n      while (current_node.parent) {\n        remove_idx = current_node.children.indexOf(remove_me);\n        if (current_node.parent.parent) {\n          current_node.children.splice(remove_idx, 1, current_node.parent);\n        } else {\n          current_node.children.splice(remove_idx, 1);\n        }\n\n        let t = current_node.parent.data.__mapped_bl;\n\n        if (t !== undefined) {\n          current_node.parent.data.__mapped_bl = stashed_bl;\n          stashed_bl = t;\n        }\n        remove_me = current_node;\n        current_node = current_node.parent;\n      }\n      remove_idx = current_node.children.indexOf(remove_me);\n      current_node.children.splice(remove_idx, 1);\n    } else {\n      remove_idx = current_node.children.indexOf(remove_me);\n      current_node.children.splice(remove_idx, 1);\n      stashed_bl = current_node.data.__mapped_bl;\n      remove_me = new_json;\n    }\n\n    // current_node is now old root, and remove_me is the root child we came up\n    // the tree through\n    if (current_node.children.length == 1) {\n      if (stashed_bl) {\n        current_node.children[0].data.__mapped_bl += stashed_bl;\n      }\n      remove_me.children = remove_me.children.concat(current_node.children);\n    } else {\n      let new_node = new d3.hierarchy({ name: \"__reroot_top_clade\", __mapped_bl: stashed_bl });\n      _.extendOwn (new_json.children[0], node);\n      new_node.data.__mapped_bl = stashed_bl;\n      new_node.children = current_node.children.map(function(n) {\n        n.parent = new_node;\n        return n;\n      });\n\n      new_node.parent = remove_me;\n      remove_me.children.push(new_node);\n     }\n\n  }\n\n  // need to traverse the nodes and update parents\n  this.update(new_json);\n\n  this.traverse_and_compute(n => {\n    _.each (n.children, (c) => {c.parent = n;})\n  }, \"pre-order\");\n\n\n  if(!_.isUndefined(this.display)) {\n    // get container\n    let options = this.display.options;\n    d3.select(this.display.container).select('svg').remove()\n    // get options\n    delete this.display;\n    let rendered_tree = this.render(options);\n    d3.select(rendered_tree.container).node().appendChild(rendered_tree.show());\n  }\n\n  return this;\n\n}\n\nexport function rootpath(attr_name, store_name) {\n\n  attr_name = attr_name || \"attribute\";\n  store_name = store_name || \"y_scaled\";\n\n  if (\"parent\" in this) {\n    let my_value = parseFloat(this[attr_name]);\n\n    this[store_name] =\n      this.parent[store_name] + (isNaN(my_value) ? 0.1 : my_value);\n\n  } else {\n\n    this[store_name] = 0.0;\n\n  }\n\n  return this[store_name];\n\n}\n\nexport function pathToRoot(node) {\n  let selection = [];\n  while (node) {\n    selection.push(node);\n    node = node.parent;\n  }\n  return selection;\n}\n","export function xCoord(d) {\n  return d.y;\n}\n\nexport function yCoord(d) {\n  return d.x;\n}\n","import { xCoord, yCoord } from \"./coordinates\";\n\nfunction radialMapper(r, a, radial_center) {\n  return {\n    x: radial_center + r * Math.sin(a),\n    y: radial_center + r * Math.cos(a)\n  };\n}\n\nfunction cartesianMapper(x, y, radial_center) { // eslint-disable-line\n  return polarToCartesian(x - radial_center, y - radial_center);\n}\n\nfunction polarToCartesian(x, y) {\n  let r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n  let a = Math.atan2(y, x);\n  return [r, a];\n}\n\nexport function cartesianToPolar(\n  node,\n  radius,\n  radial_root_offset,\n  radial_center,\n  scales,\n  size\n) {\n\n  node.radius = radius * (node.radius + radial_root_offset);\n\n  //if (!node.angle) {\n  node.angle = 2 * Math.PI * node.x * scales[0] / size[0];\n  //}\n\n  let radial = radialMapper(node.radius, node.angle, radial_center);\n\n  node.x = radial.x;\n  node.y = radial.y;\n\n  return node;\n\n}\n\nexport function drawArc(radial_center, points) {\n\n\n  var start = radialMapper(points[0].radius, points[0].angle, radial_center),\n    end = radialMapper(points[0].radius, points[1].angle, radial_center);\n\n  return (\n    \"M \" +\n    xCoord(start) +\n    \",\" +\n    yCoord(start) +\n    \" A \" +\n    points[0].radius +\n    \",\" +\n    points[0].radius +\n    \" 0,0, \" +\n    (points[1].angle > points[0].angle ? 1 : 0) +\n    \" \" +\n    xCoord(end) +\n    \",\" +\n    yCoord(end) +\n    \" L \" +\n    xCoord(points[1]) +\n    \",\" +\n    yCoord(points[1])\n  );\n}\n\nexport function arcSegmentPlacer(edge, where, radial_center) {\n  var r = radialMapper(\n    edge.target.radius + (edge.source.radius - edge.target.radius) * where,\n    edge.target.angle,\n    radial_center\n  );\n  return { x: xCoord(r), y: yCoord(r) };\n}\n","import * as d3 from \"d3\";\nimport { xCoord, yCoord } from \"./coordinates\";\n\nexport var draw_line = d3\n  .line()\n  .x(function(d) {\n    return xCoord(d);\n  })\n  .y(function(d) {\n    return yCoord(d);\n  })\n  .curve(d3.curveStepBefore);\n\nexport function lineSegmentPlacer(edge, where) {\n  return {\n    x:\n      xCoord(edge.target) +\n      (xCoord(edge.source) - xCoord(edge.target)) * where,\n    y: yCoord(edge.target)\n  };\n}\n\nexport default draw_line;\n","export function itemTagged(item) {\n  return item.tag || false;\n}\n\nexport function itemSelected(item, tag) {\n  return item[tag] || false;\n}\n","import { isLeafNode } from \"../nodes\";\n\nexport const css_classes = {\n  \"tree-container\": \"phylotree-container\",\n  \"tree-scale-bar\": \"tree-scale-bar\",\n  node: \"node\",\n  \"internal-node\": \"internal-node\",\n  \"tagged-node\": \"node-tagged\",\n  \"selected-node\": \"node-selected\",\n  \"collapsed-node\": \"node-collapsed\",\n  \"root-node\": \"root-node\",\n  branch: \"branch\",\n  \"selected-branch\": \"branch-selected\",\n  \"tagged-branch\": \"branch-tagged\",\n  \"tree-selection-brush\": \"tree-selection-brush\",\n  \"branch-tracer\": \"branch-tracer\",\n  clade: \"clade\",\n  node_text: \"phylotree-node-text\"\n};\n\nexport function internalNames(attr) {\n  if (!arguments.length) return this.options[\"internal-names\"];\n  this.options[\"internal-names\"] = attr;\n  return this;\n}\n\nexport function radial(attr) {\n  if (!arguments.length) return this.options[\"is-radial\"];\n  this.options[\"is-radial\"] = attr;\n  return this;\n}\n\nexport function alignTips(attr) {\n  if (!arguments.length) return this.options[\"align-tips\"];\n  this.options[\"align-tips\"] = attr;\n  return this;\n}\n\n/**\n * Return the bubble size of the current node.\n *\n * @param {Node} A node in the phylotree.\n * @returns {Float} The size of the bubble associated to this node.\n */\nexport function nodeBubbleSize(node) {\n\n  return this.options[\"draw-size-bubbles\"]\n    ? this.relative_nodeSpan(node) * this.scales[0] * 0.25\n    : 0;\n}\n\nexport function shiftTip(d) {\n  if (this.options[\"is-radial\"]) {\n    return [\n      (d.text_align == \"end\" ? -1 : 1) *\n        (this.radius_pad_for_bubbles - d.radius),\n      0\n    ];\n  }\n  if (this.options[\"right-to-left\"]) {\n    return [this.right_most_leaf - d.screen_x, 0];\n  }\n  return [this.right_most_leaf - d.screen_x, 0];\n}\n\nexport function layoutHandler(attr) {\n  if (!arguments.length) return this.layout_listener_handler;\n  this.layout_listener_handler = attr;\n  return this;\n}\n\n/**\n * Getter/setter for the selection label. Useful when allowing\n * users to make multiple selections.\n *\n * @param {String} attr (Optional) If setting, the new selection label.\n * @returns The current selection label if getting, or the current ``phylotree`` if setting.\n */\nexport function selectionLabel(attr) {\n  if (!arguments.length) return this.selection_attribute_name;\n  this.selection_attribute_name = attr;\n  this.syncEdgeLabels();\n  return this;\n}\n\n/**\n * Get or set the current node span. If setting, the argument should\n * be a function of a node which returns a number, so that node spans\n * can be determined dynamically. Alternatively, the argument can be the\n * string ``\"equal\"``, to give all nodes an equal span.\n *\n * @param {Function} attr Optional; if setting, the nodeSpan function.\n * @returns The ``nodeSpan`` if getting, or the current ``phylotree`` if setting.\n */\nexport function nodeSpan(attr) {\n  if (!arguments.length) return nodeSpan;\n  if (typeof attr == \"string\" && attr == \"equal\") {\n    nodeSpan = function(d) { // eslint-disable-line\n      return 1;\n    };\n  } else {\n    nodeSpan = attr; // eslint-disable-line\n  }\n  return this;\n}\n\n// List of all selecters that can be used with the restricted-selectable option\nexport var predefined_selecters = {\n  all: d => {\n    return true;\n  },\n  none: d => {\n    return false;\n  },\n  \"all-leaf-nodes\": d => {\n    return isLeafNode(d.target);\n  },\n  \"all-internal-nodes\": d => {\n    return !isLeafNode(d.target);\n  }\n};\n\n/**\n * Getter/setter for the selection callback. This function is called\n * every time the current selection is modified, and its argument is\n * an array of nodes that make up the current selection.\n *\n * @param {Function} callback (Optional) The selection callback function.\n * @returns The current ``selectionCallback`` if getting, or the current ``this`` if setting.\n */\nexport function selectionCallback(callback) {\n  if (!callback) return this.selectionCallback;\n  this.selectionCallback = callback;\n  return this;\n}\n","import * as d3 from \"d3\";\n\nimport { itemTagged, itemSelected } from \"./helpers\";\nimport { isLeafNode } from \"../nodes\";\nimport { css_classes } from \"./options\";\n\nexport function shiftTip(d) {\n\n  if (this.radial()) {\n    return [\n      (d.text_align == \"end\" ? -1 : 1) *\n        (this.radius_pad_for_bubbles - d.radius),\n      0\n    ];\n  }\n\n  if (this.options[\"right-to-left\"]) {\n    return [this.right_most_leaf - d.screen_x, 0];\n  }\n\n  return [this.right_most_leaf - d.screen_x, 0];\n\n}\n\nexport function drawNode(container, node, transitions) {\n\n  container = d3.select(container);\n  var is_leaf = isLeafNode(node);\n\n  if (is_leaf) {\n    container = container.attr(\"data-node-name\", node.data.name);\n  }\n\n  var labels = container.selectAll(\"text\").data([node]),\n    tracers = container.selectAll(\"line\");\n\n  if (is_leaf || (this.showInternalName(node) && !isNodeCollapsed(node))) {\n\n    labels = labels\n      .enter()\n      .append(\"text\")\n      .classed(this.css_classes[\"node_text\"], true)\n      .merge(labels)\n      .on(\"click\", this.handle_node_click)\n      .attr(\"dy\", d => {\n        return this.shown_font_size * 0.33;\n      })\n      .text(d => {\n        return this.options[\"show-labels\"] ? this._nodeLabel(d) : \"\";\n      })\n      .style(\"font-size\", d => {\n        return this.ensure_size_is_in_px(this.shown_font_size);\n      });\n\n    if (this.radial()) {\n      labels = labels\n        .attr(\"transform\", d => {\n          return (\n            this.d3PhylotreeSvgRotate(d.text_angle) +\n            this.d3PhylotreeSvgTranslate(\n              this.alignTips() ? this.shiftTip(d) : null\n            )\n          );\n        })\n        .attr(\"text-anchor\", d => {\n          return d.text_align;\n        });\n    } else {\n      labels = labels.attr(\"text-anchor\", \"start\").attr(\"transform\", d => {\n        if (this.options[\"layout\"] == \"right-to-left\") {\n          return this.d3PhylotreeSvgTranslate([-20, 0]);\n        }\n        return this.d3PhylotreeSvgTranslate(\n          this.alignTips() ? this.shiftTip(d) : null\n        );\n      });\n    }\n\n    if (this.alignTips()) {\n      tracers = tracers.data([node]);\n\n      if (transitions) {\n        tracers = tracers\n          .enter()\n          .append(\"line\")\n          .classed(this.css_classes[\"branch-tracer\"], true)\n          .merge(tracers)\n          .attr(\"x1\", d => {\n            return (\n              (d.text_align == \"end\" ? -1 : 1) * this.nodeBubbleSize(node)\n            );\n          })\n          .attr(\"x2\", 0)\n          .attr(\"y1\", 0)\n          .attr(\"y2\", 0)\n          .attr(\"x2\", d => {\n            if (this.options[\"layout\"] == \"right-to-left\") {\n              return d.screen_x;\n            }\n\n            return this.shiftTip(d)[0];\n          })\n          .attr(\"transform\", d => {\n            return this.d3PhylotreeSvgRotate(d.text_angle);\n          })\n          .attr(\"x2\", d => {\n            if (this.options[\"layout\"] == \"right-to-left\") {\n              return d.screen_x;\n            }\n            return this.shiftTip(d)[0];\n          })\n          .attr(\"transform\", d => {\n            return this.d3PhylotreeSvgRotate(d.text_angle);\n          });\n      } else {\n        tracers = tracers\n          .enter()\n          .append(\"line\")\n          .classed(this.css_classes[\"branch-tracer\"], true)\n          .merge(tracers)\n          .attr(\"x1\", d => {\n            return (\n              (d.text_align == \"end\" ? -1 : 1) * this.nodeBubbleSize(node)\n            );\n          })\n          .attr(\"y2\", 0)\n          .attr(\"y1\", 0)\n          .attr(\"x2\", d => {\n            return this.shiftTip(d)[0];\n          });\n        tracers.attr(\"transform\", d => {\n          return this.d3PhylotreeSvgRotate(d.text_angle);\n        });\n      }\n    } else {\n      tracers.remove();\n    }\n\n    if (this.options[\"draw-size-bubbles\"]) {\n\n      var shift = this.nodeBubbleSize(node);\n\n      let circles = container\n        .selectAll(\"circle\")\n        .data([shift])\n        .enter()\n        .append(\"circle\");\n\n      circles.attr(\"r\", function(d) {\n        return d;\n      });\n\n      if (this.shown_font_size >= 5) {\n        labels = labels.attr(\"dx\", d => {\n          return (\n            (d.text_align == \"end\" ? -1 : 1) *\n            ((this.alignTips() ? 0 : shift) + this.shown_font_size * 0.33)\n          );\n        });\n      }\n    } else {\n      if (this.shown_font_size >= 5) {\n        labels = labels.attr(\"dx\", d => { // eslint-disable-line\n          return (d.text_align == \"end\" ? -1 : 1) * this.shown_font_size * 0.33;\n        });\n      }\n    }\n  }\n\n  if (!is_leaf) {\n    let circles = container\n        .selectAll(\"circle\")\n        .data([node])\n        .enter()\n        .append(\"circle\"),\n      radius = this.node_circle_size()(node);\n\n    if (radius > 0) {\n      circles\n        .merge(circles)\n        .attr(\"r\", d => {\n          return Math.min(this.shown_font_size * 0.75, radius);\n        })\n        .on(\"click\", d => {\n          this.handle_node_click(d);\n        });\n    } else {\n      circles.remove();\n    }\n  }\n\n  if (this.node_styler) {\n    this.node_styler(container, node);\n  }\n\n  return node;\n}\n\nexport function updateHasHiddenNodes() {\n  let nodes = this.phylotree.nodes.descendants();\n\n  for (let k = nodes.length - 1; k >= 0; k -= 1) {\n    if (isLeafNode(nodes[k])) {\n      nodes[k].hasHiddenNodes = nodes[k].notshown;\n    } else {\n      nodes[k].hasHiddenNodes = nodes[k].children.reduce(function(p, c) {\n        return c.notshown || p;\n      }, false);\n    }\n  }\n\n  return this;\n}\n\nexport function showInternalName(node) {\n\n  const i_names = this.internalNames();\n\n  if (i_names) {\n    if (typeof i_names === \"function\") {\n      return i_names(node);\n    }\n    return i_names;\n  }\n\n  return false;\n}\n\n/**\n * Get or set the current node span. If setting, the argument should\n * be a function of a node which returns a number, so that node spans\n * can be determined dynamically. Alternatively, the argument can be the\n * string ``\"equal\"``, to give all nodes an equal span.\n *\n * @param {Function} attr Optional; if setting, the nodeSpan function.\n * @returns The ``nodeSpan`` if getting, or the current ``phylotree`` if setting.\n */\nexport function nodeSpan(attr) {\n  if (!arguments.length) return this.nodeSpan;\n  if (typeof attr == \"string\" && attr == \"equal\") {\n    this.nodeSpan = function(d) {\n      return 1;\n    };\n  } else {\n    this.nodeSpan = attr;\n  }\n  return this;\n}\n\nexport function reclassNode(node) {\n\n  let class_var = css_classes[isLeafNode(node) ? \"node\" : \"internal-node\"];\n\n  if (itemTagged(node)) {\n    class_var += \" \" + css_classes[\"tagged-node\"];\n  }\n\n  if (itemSelected(node, this.selection_attribute_name)) {\n    class_var += \" \" + css_classes[\"selected-node\"];\n  }\n\n  if (!node[\"parent\"]) {\n    class_var += \" \" + css_classes[\"root-node\"];\n  }\n\n  if (isNodeCollapsed(node) || hasHiddenNodes(node)) {\n    class_var += \" \" + css_classes[\"collapsed-node\"];\n  }\n\n  return class_var;\n}\n\nexport function nodeVisible(node) {\n  return !(node.hidden || node.notshown || false);\n}\n\nexport function nodeNotshown(node) {\n  return node.notshown;\n}\n\nexport function hasHiddenNodes(node) {\n  return node.hasHiddenNodes || false;\n}\n\nexport function isNodeCollapsed(node) {\n  return node.collapsed || false;\n}\n\nexport function nodeCssSelectors(css_classes) {\n  return [\n    css_classes[\"node\"],\n    css_classes[\"internal-node\"],\n    css_classes[\"collapsed-node\"],\n    css_classes[\"tagged-node\"],\n    css_classes[\"root-node\"]\n  ].reduce(function(p, c, i, a) {\n    return (p += \"g.\" + c + (i < a.length - 1 ? \",\" : \"\"));\n  }, \"\");\n}\n\nexport function internalLabel(callback, respect_existing) {\n\n  this.phylotree.clearInternalNodes(respect_existing);\n\n  for (var i = this.phylotree.nodes.descendants().length - 1; i >= 0; i--) {\n\n    var d = this.phylotree.nodes.descendants()[i];\n\n    if (!(isLeafNode(d) || itemSelected(d, this.selection_attribute_name))) {\n      d[this.selection_attribute_name] = callback(d.children);\n    }\n\n  }\n\n  this.modifySelection((d, callback) => {\n    if (isLeafNode(d.target)) {\n      return d.target[this.selection_attribute_name];\n    }\n    return d.target[this.selection_attribute_name];\n  });\n}\n\nexport function defNodeLabel(_node) {\n\n  _node = _node.data;\n\n  if (isLeafNode(_node)) {\n    return _node.name || \"\";\n  }\n\n  if (this.showInternalName(_node)) {\n    return _node.name;\n  }\n\n  return \"\";\n\n}\n\n/**\n * Get or set nodeLabel accessor.\n *\n * @param {Function} attr (Optional) If setting, a function that accesses a branch name\n * from a node.\n * @returns The ``nodeLabel`` accessor if getting, or the current ``this`` if setting.\n */\nexport function nodeLabel(attr) {\n  if (!arguments.length) return this._nodeLabel;\n  this._nodeLabel = attr ? attr : defNodeLabel;\n\tthis.update();\n  return this;\n}\n\n\n","import * as d3 from \"d3\";\nimport * as _ from \"underscore\";\nimport { isNodeCollapsed } from \"./nodes\";\n\nexport function cladeCssSelectors(css_classes) {\n  return [css_classes[\"clade\"]].reduce(function(p, c, i, a) {\n    return (p += \"path.\" + c + (i < a.length - 1 ? \",\" : \"\"));\n  }, \"\");\n}\n\nexport function updateCollapsedClades(transitions) {\n\n  let enclosure = this.svg.selectAll(\".\" + this.css_classes[\"tree-container\"]);\n  var node_id = 0;\n\n  let collapsed_clades = enclosure\n    .selectAll(cladeCssSelectors(this.css_classes))\n    .data(\n      this.phylotree.nodes.descendants().filter(isNodeCollapsed),\n      function(d) {\n        return d.id || (d.id = ++node_id);\n      }\n    );\n\n  let spline = function() {};\n  let spline_f = _.noop();\n\n  // Collapse radial differently\n  if (this.radial()) {\n    spline = d3\n      .line()\n      .curve(d3.curveBasis)\n      .y(function(d) {\n        return d[0];\n      })\n      .x(function(d) {\n        return d[1];\n      });\n\n    spline_f = function(coord, i, d, init_0, init_1) {\n      if (i) {\n        return [\n          d.screen_y + (coord[0] - init_0) / 50,\n          d.screen_x + (coord[1] - init_1) / 50\n        ];\n      } else {\n        return [d.screen_y, d.screen_x];\n      }\n    };\n  } else {\n    spline = d3\n      .line()\n      .y(function(d) {\n        return d[0];\n      })\n      .x(function(d) {\n        return d[1];\n      }).curve(d3.curveBasis);\n\n    spline_f = function(coord, i, d, init_0, init_1) {\n      if (i) {\n         return [\n          d.screen_y + (coord[0] - init_0) / 50 ,\n          d.screen_x + (coord[1] - init_1) / 50,\n        ];\n      } else {\n        return [d.screen_y, d.screen_x];\n      }\n    };\n  }\n\n  collapsed_clades\n    .exit()\n    .each(function(d) {\n      d.collapsed_clade = null;\n    })\n    .remove();\n\n  if (transitions) {\n    collapsed_clades\n      .enter()\n      .insert(\"path\", \":first-child\")\n      .attr(\"class\", this.css_classes[\"clade\"])\n      .merge(collapsed_clades)\n      .attr(\"d\", function(d) {\n        if (d.collapsed_clade) {\n          return d.collapsed_clade;\n        }\n\n        //console.log (d.collapsed);\n        let init_0 = d.collapsed[0][0];\n        let init_1 = d.collapsed[0][1];\n        \n\n  \n        // #1 return spline(d.collapsed.map(spline_f, d, init_0, init_1));\n        return spline(\n          d.collapsed.map(function(coord, i) {\n            return spline_f(coord, i, d, init_0, init_1);\n          })\n        );\n      })\n      .attr(\"d\", function(d) {        \n        return (d.collapsed_clade = spline(d.collapsed));\n      });\n  } else {\n    collapsed_clades\n      .enter()\n      .insert(\"path\", \":first-child\")\n      .attr(\"class\", this.css_classes[\"clade\"])\n      .merge(collapsed_clades)\n      .attr(\"d\", function(d) {\n        return (d.collapsed_clade ? d.collapsed_clade : d.collapsed_clade = spline(d.collapsed));\n      });\n  }\n}\n","import * as d3 from \"d3\";\nimport { itemTagged, itemSelected } from \"./helpers\";\nimport { css_classes } from \"./options\";\n\nexport function drawEdge(container, edge, transition) {\n\n  container = d3.select(container);\n\n  container = container\n    .attr(\"class\", d => {\n      return this.reclassEdge(d);\n    })\n    .on(\"click\", d => {\n      this.modifySelection([d.target], this.selection_attribute_name);\n      this.update();\n    });\n\n  let new_branch_path = this.draw_branch([edge.source, edge.target]);\n\n  if (transition) {\n\n    if (container.datum().existing_path) {\n      container = container.attr(\"d\", function(d) {\n        return d.existing_path;\n      });\n    }\n\n    container = container.attr(\"d\", new_branch_path);\n\n  } else {\n    container = container.attr(\"d\", new_branch_path);\n  }\n\n  edge.existing_path = new_branch_path;\n\n  var bl = this.phylotree.branch_length_accessor(edge.target);\n\n  if (bl !== undefined) {\n    var haz_title = container.selectAll(\"title\");\n\n    if (haz_title.empty()) {\n      haz_title = container.append(\"title\");\n    }\n    haz_title.text(\"Length = \" + bl);\n  } else {\n    container.selectAll(\"title\").remove();\n  }\n\n  if (this.edge_styler) {\n    this.edge_styler(container, edge, transition);\n  }\n\n  return this.phylotree;\n\n}\n\nexport function reclassEdge(edge) {\n  let class_var = css_classes[\"branch\"];\n\n  if (itemTagged(edge)) {\n    class_var += \" \" + css_classes[\"tagged-branch\"];\n  }\n\n  if (itemSelected(edge, this.selection_attribute_name)) {\n    class_var += \" \" + css_classes[\"selected-branch\"];\n  }\n\n  return class_var;\n\n}\n\nexport function initializeEdgeLabels() {\n\n  this.links.forEach(d => {\n\n    // TODO: Move away from storing attribute data as root (BREAKS occasionally with d3>3)\n    if(d.target.data.annotation) {\n      d.target[d.target.data.annotation] = d.target.data.annotation;\n    }\n\n  });\n\n}\n\n\nexport function syncEdgeLabels() {\n\n  this.links.forEach(d => {\n\n    // TODO: Move away from storing attribute data as root (BREAKS occasionally with d3>3)\n    d[this.selection_attribute_name] =\n      d.target[this.selection_attribute_name] || false;\n    d.tag = d.target.tag || false;\n\n  });\n\n  if (this.countHandler()) {\n\n    let counts = {};\n\n    counts[\n      this.selection_attribute_name\n    ] = this.links.reduce((p, c) => {\n      return p + (c[this.selection_attribute_name] ? 1 : 0);\n    }, 0);\n\n    counts[\"tagged\"] = this.links.reduce(function(p, c) {\n      return p + (itemTagged(c) ? 1 : 0);\n    }, 0);\n\n    this.countUpdate(this, counts, this.countHandler());\n\n  }\n\n}\n\nexport function edgeVisible(edge) {\n  return !(edge.target.hidden || edge.target.notshown || false);\n}\n\nexport function edgeCssSelectors(css_classes) {\n  return [\n    css_classes[\"branch\"],\n    css_classes[\"selected-branch\"],\n    css_classes[\"tagged-branch\"]\n  ].reduce(function(p, c, i, a) {\n    return (p += \"path.\" + c + (i < a.length - 1 ? \",\" : \"\"));\n  }, \"\");\n}\n\nexport function placeAlongAnEdge (e, where) {\n    return this.edge_placer (e, where);\n}\n","import { isLeafNode } from \"../nodes\";\nimport { css_classes } from \"./options\";\n\nlet d3_layout_phylotree_event_id = \"phylotree.event\";\n\n/**\n * Toggle collapsed view of a given node. Either collapses a clade into\n * a smaller blob for viewing large trees, or expands a node that was\n * previously collapsed.\n *\n * @param {Node} node The node to toggle.\n * @returns {Phylotree} The current ``phylotree``.\n */\nexport function toggleCollapse(node) {\n  if (node.collapsed) {\n    node.collapsed = false;\n\n    let unhide = function(n) {\n      if (!isLeafNode(n)) {\n        if (!n.collapsed) {\n          n.children.forEach(unhide);\n        }\n      }\n      n.hidden = false;\n    };\n\n    unhide(node);\n  } else {\n    node.collapsed = true;\n  }\n\n  this.placenodes();\n  return this;\n}\n\nexport function resizeSvg(tree, svg, tr) {\n\n  let sizes = this.size;\n\n  if (this.radial()) {\n    let pad_radius = this.pad_width(),\n      vertical_offset =\n        this.options[\"top-bottom-spacing\"] != \"fit-to-size\"\n          ? this.pad_height()\n          : 0;\n\n    sizes = [\n      sizes[1] + 2 * pad_radius,\n      sizes[0] + 2 * pad_radius + vertical_offset\n    ];\n\n    if (svg) {\n      svg\n        .selectAll(\".\" + css_classes[\"tree-container\"])\n        .attr(\n          \"transform\",\n          \"translate (\" +\n            pad_radius +\n            \",\" +\n            (pad_radius + vertical_offset) +\n            \")\"\n        );\n    }\n  } else {\n\n    sizes = [\n      sizes[0] +\n        (this.options[\"top-bottom-spacing\"] != \"fit-to-size\"\n          ? this.pad_height()\n          : 0),\n      sizes[1] +\n        (this.options[\"left-right-spacing\"] != \"fit-to-size\"\n          ? this.pad_width()\n          : 0)\n    ];\n\n  }\n\n  if (svg) {\n\n    if (tr) {\n      svg = svg.transition(100);\n    }\n\n    svg.attr(\"height\", sizes[0]).attr(\"width\", sizes[1]);\n\n  }\n\n  this.size = sizes;\n\n  return sizes;\n\n}\n\nexport function rescale(scale, attr_name) {\n  attr_name = attr_name || \"y_scaled\";\n  if (attr_name in this) {\n    this[attr_name] *= scale;\n  }\n}\n\nexport function triggerRefresh(tree) {\n\n  var event = new CustomEvent(d3_layout_phylotree_event_id, {\n    detail: [\"refresh\", tree]\n  });\n\n  document.dispatchEvent(event);\n\n}\n\nexport function countUpdate(tree, counts) {\n  var event = new CustomEvent(d3_layout_phylotree_event_id, {\n    detail: [\"countUpdate\", counts, tree.countHandler()]\n  });\n  document.dispatchEvent(event);\n}\n\nexport function d3PhylotreeTriggerLayout(tree) {\n  var event = new CustomEvent(d3_layout_phylotree_event_id, {\n    detail: [\"layout\", tree, tree.layoutHandler()]\n  });\n  document.dispatchEvent(event);\n}\n\nexport function d3PhylotreeEventListener(event) {\n  switch (event.detail[0]) {\n    case \"refresh\":\n      event.detail[1].refresh();\n      break;\n    case \"countUpdate\":\n      event.detail[2](event.detail[1]);\n      break;\n    case \"layout\":\n      event.detail[2](event.detail[1]);\n  }\n  return true;\n}\n\nexport function d3PhylotreeAddEventListener() {\n  document.addEventListener(\n    d3_layout_phylotree_event_id,\n    d3PhylotreeEventListener,\n    false\n  );\n}\n\nexport function d3PhylotreeSvgTranslate(x) {\n  if (x && (x[0] !== null || x[1] !== null))\n    return (\n      \"translate (\" +\n      (x[0] !== null ? x[0] : 0) +\n      \",\" +\n      (x[1] !== null ? x[1] : 0) +\n      \") \"\n    );\n\n  return \"\";\n}\n\nexport function d3PhylotreeSvgRotate(a) {\n  if (a !== null) {\n    return \"rotate (\" + a + \") \";\n  }\n  return \"\";\n}\n","import * as d3 from \"d3\";\nimport * as _ from \"underscore\";\nimport * as events from \"./events\";\nimport { isLeafNode } from \"../nodes\";\nimport { isNodeCollapsed, hasHiddenNodes } from \"./nodes\";\nimport { predefined_selecters } from \"./options\";\n\nlet d3_layout_phylotree_context_menu_id = \"d3_layout_phylotree_context_menu\";\n\nexport function nodeDropdownMenu(node, container, phylotree, options) {\n  let menu_object = d3\n    .select(container)\n    .select(\"#\" + d3_layout_phylotree_context_menu_id);\n\n  if (menu_object.empty()) {\n    menu_object = d3\n      .select(container)\n      .append(\"div\")\n      .attr(\"id\", d3_layout_phylotree_context_menu_id)\n      .attr(\"class\", \"dropdown-menu\")\n      .attr(\"role\", \"menu\");\n  }\n\n  menu_object.selectAll(\"a\").remove();\n  menu_object.selectAll(\"h6\").remove();\n  menu_object.selectAll(\"div\").remove();\n\n  if (node) {\n    if (\n      !_.some([\n        Boolean(node.menu_items),\n        options[\"hide\"],\n        options[\"selectable\"],\n        options[\"collapsible\"]\n      ]) ||\n      !options[\"show-menu\"]\n    )\n      return;\n    if (!isLeafNode(node)) {\n      if (options[\"collapsible\"]) {\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(isNodeCollapsed(node) ? \"Expand Subtree\" : \"Collapse Subtree\")\n          .on(\"click\", d => {\n            menu_object.style(\"display\", \"none\");\n            this.toggleCollapse(node).update();\n          });\n        if (options[\"selectable\"]) {\n          menu_object.append(\"div\").attr(\"class\", \"dropdown-divider\");\n          menu_object\n            .append(\"h6\")\n            .attr(\"class\", \"dropdown-header\")\n            .text(\"Toggle selection\");\n        }\n      }\n\n      if (options[\"selectable\"]) {\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(\"All descendant branches\")\n          .on(\"click\", function(d) {\n            menu_object.style(\"display\", \"none\");\n            phylotree.modifySelection(\n              phylotree.selectAllDescendants(node, true, true)\n            );\n          });\n\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(\"All terminal branches\")\n          .on(\"click\", function(d) {\n            menu_object.style(\"display\", \"none\");\n            phylotree.modifySelection(\n              phylotree.selectAllDescendants(node, true, false)\n            );\n          });\n\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(\"All internal branches\")\n          .on(\"click\", function(d) {\n            menu_object.style(\"display\", \"none\");\n            phylotree.modifySelection(\n              phylotree.selectAllDescendants(node, false, true)\n            );\n          });\n      }\n    }\n\n    if (node.parent) {\n      if (options[\"selectable\"]) {\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(\"Incident branch\")\n          .on(\"click\", function(d) {\n            menu_object.style(\"display\", \"none\");\n            phylotree.modifySelection([node]);\n          });\n\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(\"Path to root\")\n          .on(\"click\", d => {\n            menu_object.style(\"display\", \"none\");\n            this.modifySelection(this.phylotree.pathToRoot(node));\n          });\n\n        if (options[\"reroot\"] || options[\"hide\"]) {\n          menu_object.append(\"div\").attr(\"class\", \"dropdown-divider\");\n        }\n      }\n\n      if (options[\"reroot\"]) {\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(\"Reroot on this node\")\n          .on(\"click\", d => {\n            menu_object.style(\"display\", \"none\");\n            this.phylotree.reroot(node);\n            this.update();\n          });\n      }\n\n      if (options[\"hide\"]) {\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(\"Hide this \" + (isLeafNode(node) ? \"node\" : \"subtree\"))\n          .on(\"click\", d => {\n            menu_object.style(\"display\", \"none\");\n            this.modifySelection([node], \"notshown\", true, true)\n              .updateHasHiddenNodes()\n              .update();\n          });\n      }\n    }\n\n    if (hasHiddenNodes(node)) {\n      menu_object\n        .append(\"a\")\n        .attr(\"class\", \"dropdown-item\")\n        .attr(\"tabindex\", \"-1\")\n        .text(\"Show all descendant nodes\")\n        .on(\"click\", function(d) {\n          menu_object.style(\"display\", \"none\");\n          phylotree\n            .modifySelection(\n              phylotree.selectAllDescendants(node, true, true),\n              \"notshown\",\n              true,\n              true,\n              \"false\"\n            )\n            .updateHasHiddenNodes()\n            .update();\n        });\n    }\n\n    // now see if we need to add user defined menus\n\n    var has_user_elements = [];\n    if (\"menu_items\" in node && typeof node[\"menu_items\"] === \"object\") {\n      node[\"menu_items\"].forEach(function(d) {\n        if (d.length == 3) {\n          if (!d[2] || d[2](node)) {\n            has_user_elements.push([d[0], d[1]]);\n          }\n        }\n      });\n    }\n\n    if (has_user_elements.length) {\n      const show_divider_options = [\n        options[\"hide\"],\n        options[\"selectable\"],\n        options[\"collapsible\"]\n      ];\n\n      if (_.some(show_divider_options)) {\n        menu_object.append(\"div\").attr(\"class\", \"dropdown-divider\");\n      }\n\n      has_user_elements.forEach(function(d) {\n        menu_object\n          .append(\"a\")\n          .attr(\"class\", \"dropdown-item\")\n          .attr(\"tabindex\", \"-1\")\n          .text(constant(d[0])(node)) // eslint-disable-line\n          .on(\"click\", _.partial(d[1], node));\n      });\n    }\n\n    let tree_container = $(container); // eslint-disable-line\n    let coordinates = d3.mouse(tree_container[0]);\n\n    menu_object\n      .style(\"position\", \"absolute\")\n      .style(\"left\", \"\" + (coordinates[0] + tree_container.position().left) + \"px\")\n      .style(\"top\", \"\" + (coordinates[1] + tree_container.position().top) + \"px\")\n      .style(\"display\", \"block\");\n  } else {\n    menu_object.style(\"display\", \"none\");\n  }\n}\n\nexport function addCustomMenu(node, name, callback, condition) {\n  if (!(\"menu_items\" in node)) {\n    node[\"menu_items\"] = [];\n  }\n  if (\n    !node[\"menu_items\"].some(function(d) {\n      return d[0] == name && d[1] == callback && d[2] == condition;\n    })\n  ) {\n    node[\"menu_items\"].push([name, callback, condition]);\n  }\n}\n\n/**\n *\n * Modify the current selection, via functional programming.\n *\n * @param {Function} node_selecter A function to apply to each node, which\n * determines whether they become part of the current selection. Alternatively,\n * if ``restricted-selectable`` mode is enabled, a string describing one of\n * the pre-defined restricted-selectable options.\n * @param {String} attr (Optional) The selection attribute to modify.\n * @param {Boolean} place (Optional) Whether or not ``placenodes`` should be called.\n * @param {Boolean} skip_refresh (Optional) Whether or not a refresh is called.\n * @param {String} mode (Optional) Can be ``\"toggle\"``, ``\"true\"``, or ``\"false\"``.\n * @returns The current ``this``.\n *\n */\nexport function modifySelection(\n  node_selecter,\n  attr,\n  place,\n  skip_refresh,\n  mode\n) {\n\n  attr = attr || this.selection_attribute_name;\n  mode = mode || \"toggle\";\n\n  // check if node_selecter is a value of pre-defined selecters\n\n  if (this.options[\"restricted-selectable\"].length) {\n    // the selection must be from a list of pre-determined selections\n    if (_.contains(_.keys(predefined_selecters), node_selecter)) {\n      node_selecter = predefined_selecters[node_selecter];\n    } else {\n      return;\n    }\n  }\n\n  if (\n    (this.options[\"restricted-selectable\"] || this.options[\"selectable\"]) &&\n    !this.options[\"binary-selectable\"]\n  ) {\n    var do_refresh = false;\n\n    if (typeof node_selecter === \"function\") {\n      this.links.forEach(function(d) {\n        let select_me = node_selecter(d);\n        d[attr] = d[attr] || false;\n        if (d[attr] != select_me) {\n          d[attr] = select_me;\n          do_refresh = true;\n          d.target[attr] = select_me;\n        }\n      });\n    } else {\n      node_selecter.forEach(function(d) {\n        var new_value;\n        switch (mode) {\n          case \"true\":\n            new_value = true;\n            break;\n          case \"false\":\n            new_value = false;\n            break;\n          default:\n            new_value = !d[attr];\n            break;\n        }\n\n        if (d[attr] != new_value) {\n          d[attr] = new_value;\n          do_refresh = true;\n        }\n      });\n\n      this.links.forEach(function(d) {\n        d[attr] = d.target[attr];\n      });\n    }\n\n    var counts;\n\n    if (do_refresh) {\n      if (!skip_refresh) {\n        events.triggerRefresh(this);\n      }\n      if (this.countHandler) {\n        counts = {};\n        counts[attr] = this.links.reduce(function(p, c) {\n          return p + (c[attr] ? 1 : 0);\n        }, 0);\n        events.countUpdate(this, counts, this.countHandler);\n      }\n\n      if (place) {\n        this.placenodes();\n      }\n    }\n  } else if (this.options[\"binary-selectable\"]) {\n    if (typeof node_selecter === \"function\") {\n      this.links.forEach(function(d) {\n        var select_me = node_selecter(d);\n        d[attr] = d[attr] || false;\n\n        if (d[attr] != select_me) {\n          d[attr] = select_me;\n          do_refresh = true;\n          d.target[attr] = select_me;\n        }\n\n        this.options[\"attribute-list\"].forEach(function(type) {\n          if (type != attr && d[attr] === true) {\n            d[type] = false;\n            d.target[type] = false;\n          }\n        });\n      });\n    } else {\n      node_selecter.forEach(function(d) {\n        var new_value;\n        new_value = !d[attr];\n\n        if (d[attr] != new_value) {\n          d[attr] = new_value;\n          do_refresh = true;\n        }\n      });\n\n      this.links.forEach(function(d) {\n        d[attr] = d.target[attr];\n        this.options[\"attribute-list\"].forEach(function(type) {\n          if (type != attr && d[attr] !== true) {\n            d[type] = false;\n            d.target[type] = false;\n          }\n        });\n      });\n    }\n\n    if (do_refresh) {\n      if (!skip_refresh) {\n        events.triggerRefresh(this);\n      }\n      if (this.countHandler()) {\n        counts = {};\n        counts[attr] = this.links.reduce(function(p, c) {\n          return p + (c[attr] ? 1 : 0);\n        }, 0);\n        this.countUpdate(this, counts, this.countHandler());\n      }\n\n      if (place) {\n        this.placenodes();\n      }\n    }\n  }\n\n  if (this.selectionCallback && attr != \"tag\") {\n    this.selectionCallback(this.getSelection());\n  }\n\n  this.refresh();\n  this.update();\n  return this;\n}\n\n/**\n * Get nodes which are currently selected.\n *\n * @returns {Array} An array of nodes that match the current selection.\n */\nexport function getSelection() {\n  return this.nodes.filter(d => {\n    return d[this.selection_attribute_name];\n  });\n}\n\n/**\n * Select all descendents of a given node, with options for selecting\n * terminal/internal nodes.\n *\n * @param {Node} node The node whose descendents should be selected.\n * @param {Boolean} terminal Whether to include terminal nodes.\n * @param {Boolean} internal Whther to include internal nodes.\n * @returns {Array} An array of selected nodes.\n */\nexport function selectAllDescendants(node, terminal, internal) {\n  let selection = [];\n\n  function sel(d) {\n    if (isLeafNode(d)) {\n      if (terminal) {\n        if (d != node) selection.push(d);\n      }\n    } else {\n      if (internal) {\n        if (d != node) selection.push(d);\n      }\n      d.children.forEach(sel);\n    }\n  }\n\n  sel(node);\n  return selection;\n}\n\n/**\n * Getter/setter for the selection callback. This function is called\n * every time the current selection is modified, and its argument is\n * an array of nodes that make up the current selection.\n *\n * @param {Function} callback (Optional) The selection callback function.\n * @returns The current ``selectionCallback`` if getting, or the current ``this`` if setting.\n */\nexport function selectionCallback(callback) {\n  if (!callback) return this.selectionCallback;\n  this.selectionCallback = callback;\n  return this;\n}\n","import * as d3 from \"d3\";\nimport * as _ from \"underscore\";\n\nimport { drawArc, cartesianToPolar, arcSegmentPlacer } from \"./radial\";\nimport { default as draw_line, lineSegmentPlacer } from \"./cartesian\";\nimport { isLeafNode } from \"../nodes\";\nimport { xCoord, yCoord } from \"./coordinates\";\nimport * as clades from \"./clades\";\nimport * as render_nodes from \"./nodes\";\nimport * as render_edges from \"./edges\";\nimport * as events from \"./events\";\nimport { css_classes } from \"./options\";\nimport * as opt from \"./options\";\nimport * as menus from \"./menus\";\n\n// replacement for d3.functor\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nclass TreeRender {\n  constructor(phylotree, options = {}) {\n    this.css_classes = css_classes;\n    this.phylotree = phylotree;\n    this.container = options.container;\n    this.separation = function(_node, _previous) {\n      return 0;\n    };\n\n    this._nodeLabel = this.defNodeLabel;\n    this.svg = null;\n    this.selectionCallback = null;\n    this.scales = [1, 1];\n    this.size = [1, 1];\n    this.fixed_width = [14, 30];\n    this.font_size = 12;\n    this.scale_bar_font_size = 12;\n    this.offsets = [0, this.font_size / 2];\n\n    this.draw_branch = draw_line;\n    this.draw_scale_bar = null;\n    this.edge_placer = lineSegmentPlacer;\n    this.count_listener_handler = function() {};\n    this.layout_listener_handler = function() {};\n    this.node_styler = undefined;\n    this.edge_styler = undefined;\n    this.shown_font_size = this.font_size;\n    this.selection_attribute_name = \"selected\";\n    this.right_most_leaf = 0;\n    this.label_width = 0;\n    this.radial_center = 0;\n    this.radius = 1;\n    this.radius_pad_for_bubbles = 0;\n    this.rescale_nodeSpan = 1;\n    this.relative_nodeSpan = function(_node) {\n      return this.nodeSpan(_node) / this.rescale_nodeSpan;\n    };\n\n    let default_options = {\n      layout: \"left-to-right\",\n      logger: console,\n      branches: \"step\",\n      scaling: true,\n      bootstrap: false,\n      \"color-fill\": true,\n      \"internal-names\": false,\n      selectable: true,\n      // restricted-selectable can take an array of predetermined\n      // selecters that are defined in phylotree.predefined_selecters\n      // only the defined functions will be allowed when selecting\n      // branches\n      \"restricted-selectable\": false,\n      collapsible: true,\n      \"left-right-spacing\": \"fixed-step\", //'fit-to-size',\n      \"top-bottom-spacing\": \"fixed-step\",\n      \"left-offset\": 0,\n      \"show-scale\": \"top\",\n      // currently not implemented to support any other positioning\n      \"draw-size-bubbles\": false,\n      \"binary-selectable\": false,\n      \"is-radial\": false,\n      \"attribute-list\": [],\n      \"max-radius\": 768,\n      \"annular-limit\": 0.38196601125010515,\n      compression: 0.2,\n      \"align-tips\": false,\n      \"maximum-per-node-spacing\": 100,\n      \"minimum-per-node-spacing\": 2,\n      \"maximum-per-level-spacing\": 100,\n      \"minimum-per-level-spacing\": 10,\n      node_circle_size: constant(3),\n      transitions: null,\n      brush: true,\n      reroot: true,\n      hide: true,\n      \"label-nodes-with-name\": false,\n      zoom: false,\n      \"show-menu\": true,\n      \"show-labels\": true,\n      \"node-styler\": null,\n      \"edge-styler\": null,\n      \"node-span\": null\n    };\n\n    this.ensure_size_is_in_px = function(value) {\n      return typeof value === \"number\" ? value + \"px\" : value;\n    };\n\n    this.options = _.defaults(options, default_options);\n\n    this.width = this.options.width || 800;\n    this.height = this.options.height || 600;\n\n    this.node_styler = this.options['node-styler'];\n    this.edge_styler = this.options['edge-styler'];\n\n    this.nodeSpan = this.options['node-span'];\n\n    if(!this.nodeSpan) {\n      this.nodeSpan = function(_node) {\n        return 1;\n      };\n    }\n\n    this.rescale_nodeSpan =\n      this.phylotree.nodes.children\n        .map(d => {\n          if (isLeafNode(d) || this.showInternalName(d))\n            return this.nodeSpan(d);\n        })\n        .reduce(function(p, c) {\n          return Math.min(c, p || 1e200);\n        }, null) || 1;\n\n    this.initialize_svg(this.container);\n    this.links = this.phylotree.nodes.links();\n    this.initializeEdgeLabels();\n    this.update();\n    events.d3PhylotreeAddEventListener();\n  }\n\n  pad_height() {\n    if (this.draw_scale_bar) {\n      return this.scale_bar_font_size + 25;\n    }\n\n    return 0;\n  }\n\n  pad_width() {\n    // reset label_width\n    this.label_width = this._label_width(this.shown_font_size);\n\n    const _label_width = this.options[\"show-labels\"] ? this.label_width : 0;\n    return this.offsets[1] + this.options[\"left-offset\"] + _label_width;\n  }\n\n  /**\n   * Collapses a given node.\n   *\n   * @param {Node} node A node to be collapsed.\n   */\n  collapse_node(n) {\n    if (!render_nodes.isNodeCollapsed(n)) {\n      n.collapsed = true;\n    }\n  }\n\n  /**\n   * Get or set the size of tree in pixels.\n   *\n   * @param {Array} attr (optional) An array of the form ``[height, width]``.\n   * @returns {Phylotree} The current ``size`` array if getting, or the current ``phylotree``\n   * if setting.\n   */\n  set_size(attr) {\n    if (!arguments.length) {\n      return this.size;\n    }\n\n    let phylo_attr = attr;\n\n    if (this.options[\"top-bottom-spacing\"] != \"fixed-step\") {\n      this.size[0] = phylo_attr[0];\n    }\n    if (this.options[\"left-right-spacing\"] != \"fixed-step\") {\n      this.size[1] = phylo_attr[1];\n    }\n\n    return this;\n  }\n\n  /**\n   * Getter/setter for the SVG element for the Phylotree to be rendered in.\n   *\n   * @param {d3-selection} svg_element (Optional) SVG element to render within, selected by D3.\n   * @returns The selected SVG element if getting, or the current ``phylotree`` if setting.`\n   */\n  initialize_svg(svg_element) {\n    //if (!arguments.length) return this.svg;\n\n    if (this.svg !== svg_element) {\n      d3.select(svg_element)\n        .select(\"svg\")\n        .remove();\n\n      this.svg = d3\n        .create(\"svg\")\n        .attr(\"width\", this.width)\n        .attr(\"height\", this.height);\n\n      this.set_size([this.height, this.width]);\n\n      if (this.css_classes[\"tree-container\"] == \"phylotree-container\") {\n        this.svg.selectAll(\"*\").remove();\n        this.svg.append(\"defs\");\n      }\n\n      d3.select(this.container).on(\n        \"click\",\n        d => {\n          this.handle_node_click(null);\n        },\n        true\n      );\n    }\n\n    return this;\n  }\n\n  update_layout(new_json, do_hierarchy) {\n    if (do_hierarchy) {\n      this.nodes = d3.hierarchy(new_json);\n      this.nodes.each(function(d) {\n        d.id = null;\n      });\n    }\n\n    this.update();\n    this.syncEdgeLabels();\n  }\n\n  /**\n   * Update the current phylotree, i.e., alter the svg\n   * elements.\n   *\n   * @param {Boolean} transitions (Optional) Toggle whether transitions should be shown.\n   * @returns The current ``phylotree``.\n   */\n  update(transitions) {\n\n    var self = this;\n\n    //if (!this.svg) return this;\n\n    this.placenodes();\n\n    transitions = this.transitions(transitions);\n\n    let node_id = 0;\n\n    let enclosure = this.svg\n      .selectAll(\".\" + css_classes[\"tree-container\"])\n      .data([0]);\n\n    enclosure = enclosure\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", css_classes[\"tree-container\"])\n      .merge(enclosure)\n      .attr(\"transform\", d => {\n        return this.d3PhylotreeSvgTranslate([\n          this.offsets[1] + this.options[\"left-offset\"],\n          this.pad_height()\n        ]);\n      });\n\n    if (this.draw_scale_bar) {\n      let scale_bar = this.svg\n        .selectAll(\".\" + css_classes[\"tree-scale-bar\"])\n        .data([0]);\n\n      scale_bar\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", css_classes[\"tree-scale-bar\"])\n        .style(\"font-size\", this.ensure_size_is_in_px(this.scale_bar_font_size))\n        .merge(scale_bar)\n        .attr(\"transform\", d => {\n          return this.d3PhylotreeSvgTranslate([\n            this.offsets[1] + this.options[\"left-offset\"],\n            this.pad_height() - 10\n          ]);\n        })\n        .call(this.draw_scale_bar);\n\n      scale_bar.selectAll(\"text\").style(\"text-anchor\", \"end\");\n    } else {\n      this.svg.selectAll(\".\" + css_classes[\"tree-scale-bar\"]).remove();\n    }\n\n    enclosure = this.svg\n      .selectAll(\".\" + css_classes[\"tree-container\"])\n      .data([0]);\n\n    this.updateCollapsedClades(transitions);\n\n    let drawn_links = enclosure\n      .selectAll(render_edges.edgeCssSelectors(css_classes))\n      .data(this.links.filter(render_edges.edgeVisible), d => {\n        return d.target.id || (d.target.id = ++node_id);\n      });\n\n    if (transitions) {\n      drawn_links.exit().remove();\n    } else {\n      drawn_links.exit().remove();\n    }\n\n    drawn_links = drawn_links\n      .enter()\n      .insert(\"path\", \":first-child\")\n      .merge(drawn_links)\n      .each(function(d) {\n        self.drawEdge(this, d, transitions);\n      });\n\n    let drawn_nodes = enclosure\n      .selectAll(render_nodes.nodeCssSelectors(css_classes))\n      .data(\n        this.phylotree.nodes.descendants().filter(render_nodes.nodeVisible),\n        d => {\n          return d.id || (d.id = ++node_id);\n        }\n      );\n\n    drawn_nodes.exit().remove();\n\n    drawn_nodes = drawn_nodes\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", this.reclassNode)\n      .merge(drawn_nodes)\n      .attr(\"transform\", d => {\n        const should_shift =\n          this.options[\"layout\"] == \"right-to-left\" && isLeafNode(d);\n\n        d.screen_x = xCoord(d);\n        d.screen_y = yCoord(d);\n\n        return this.d3PhylotreeSvgTranslate([\n          should_shift ? 0 : d.screen_x,\n          d.screen_y\n        ]);\n      })\n      .each(function(d) {\n        self.drawNode(this, d, transitions);\n      })\n      .attr(\"transform\", d => {\n        if (!_.isUndefined(d.screen_x) && !_.isUndefined(d.screen_y)) {\n          return \"translate(\" + d.screen_x + \",\" + d.screen_y + \")\";\n        }\n      });\n\n    if (this.options[\"label-nodes-with-name\"]) {\n      drawn_nodes = drawn_nodes.attr(\"id\", d => {\n        return \"node-\" + d.name;\n      });\n    }\n\n    this.resizeSvg(this.phylotree, this.svg, transitions);\n\n    if (this.options[\"brush\"]) {\n      var brush = enclosure\n        .selectAll(\".\" + css_classes[\"tree-selection-brush\"])\n        .data([0])\n        .enter()\n        .insert(\"g\", \":first-child\")\n        .attr(\"class\", css_classes[\"tree-selection-brush\"]);\n\n      var brush_object = d3\n        .brush()\n        .on(\"brush\", d => {\n          var extent = d3.event.selection,\n            shown_links = this.links.filter(render_edges.edgeVisible);\n          var selected_links = shown_links\n              .filter((d, i) => {\n                return (\n                  d.source.screen_x >= extent[0][0] &&\n                  d.source.screen_x <= extent[1][0] &&\n                  d.source.screen_y >= extent[0][1] &&\n                  d.source.screen_y <= extent[1][1] &&\n                  d.target.screen_x >= extent[0][0] &&\n                  d.target.screen_x <= extent[1][0] &&\n                  d.target.screen_y >= extent[0][1] &&\n                  d.target.screen_y <= extent[1][1]\n                );\n              })\n              .map(d => {\n                return d.target;\n              });\n\n          this.modifySelection(\n            this.phylotree.links.map(d => {\n              return d.target;\n            }),\n            \"tag\",\n            false,\n            selected_links.length > 0,\n            \"false\"\n          );\n\n          this.modifySelection(selected_links, \"tag\", false, false, \"true\");\n        })\n        .on(\"end\", () => {\n          //brush.call(d3.event.target.clear());\n        });\n\n      brush.call(brush_object);\n    }\n\n    this.syncEdgeLabels();\n\n    if (this.options[\"zoom\"]) {\n      let zoom = d3\n        .zoom()\n        .scaleExtent([0.1, 10])\n        .on(\"zoom\", () => {\n\n          d3.select(\".\" + css_classes[\"tree-container\"]).attr(\"transform\", d => {\n            let toTransform = d3.event.transform;\n            return toTransform;\n          });\n\n          // Give some extra room\n          d3.select(\".\" + css_classes[\"tree-scale-bar\"]).attr(\"transform\", d => {\n            let toTransform = d3.event.transform;\n            toTransform.y -= 10; \n            return toTransform;\n          });\n          \n        });\n\n      this.svg.call(zoom);\n    }\n\n    return this;\n  }\n\n  _handle_single_node_layout(\n    a_node\n  ) {\n    let _nodeSpan = this.nodeSpan(a_node) / this.rescale_nodeSpan;\n    // compute the relative size of nodes (0,1)\n    // sum over all nodes is 1\n    this.x = a_node.x =\n      this.x +\n      this.separation(this.last_node, a_node) +\n      (this.last_span + _nodeSpan) * 0.5;\n      \n \n    // separation is a user-settable callback to add additional spacing on nodes\n    this._extents[1][1] = Math.max(this._extents[1][1], a_node.y);\n    this._extents[1][0] = Math.min(\n      this._extents[1][0],\n      a_node.y - _nodeSpan * 0.5\n    );\n    \n\n    if (this.is_under_collapsed_parent) {\n       this._extents[0][1] = Math.max(\n        this._extents[0][1],\n        this.save_x +\n          (a_node.x - this.save_x) * this.options[\"compression\"] +\n          this.save_span +\n          (_nodeSpan * 0.5 + this.separation(this.last_node, a_node)) *\n            this.options[\"compression\"]\n      );      \n    } else {\n      this._extents[0][1] = Math.max(\n        this._extents[0][1],\n        this.x + _nodeSpan * 0.5 + this.separation(this.last_node, a_node)\n      );\n    }\n\n\n    this.last_node = a_node;\n    this.last_span = _nodeSpan;\n    \n  }\n\n  tree_layout(a_node) {\n    /**\n            for each node: \n                y: the y coordinate is root to tip\n                    (left to right in cladogram layout, radius is radial layout\n                x : the x coordinate is top-most to bottom-most \n                    (top to bottom in cladogram layout, angle in radial layout)\n                \n                \n         @return the x-coordinate of a_node or undefined in the node is not displayed\n                 (hidden or under a collapsed node)\n        */\n\n\n    // do not layout hidden nodes\n    if (render_nodes.nodeNotshown(a_node)) {\n      return undefined;\n    }\n\n    let is_leaf = isLeafNode(a_node);\n\n    // the next four members are radial layout options\n    a_node.text_angle = null; // the angle at which text is being laid out\n    a_node.text_align = null; // css alignment option for node labels\n    a_node.radius = null; // radial layout radius\n    a_node.angle = null; // radial layout angle (in radians)\n\n    /** determine the root-to-tip location of this node;\n            \n      the root node receives the co-ordinate of 0\n      \n      if the tree has branch lengths, then the placement of each node is simply the \n      total branch length to the root\n      \n      if the tree has no branch lengths, all leaves get the same depth (\"number of internal nodes on the deepest path\")\n      and all internal nodes get the depth in integer units of the # of internal nodes on the path to the root + 1\n        \n    */\n\n    let undef_BL = false;\n\n    /** _extents computes a bounding box for the tree (initially NOT in screen \n            coordinates)\n\n        all account for node sizes\n\n        _extents [1][0] -- the minimum x coordinate (breadth)\n        _extents [1][1] -- the maximum y coordinate (breadth)\n        _extents [1][0] -- the minimum y coordinate (root-to-tip, or depthwise)\n        _extents [1][1] -- the maximum y coordinate (root-to-tip, or depthwise)\n\n    */\n\n\n    // last node laid out in the top bottom hierarchy\n\n    if (a_node[\"parent\"]) {\n      if (this.do_scaling) {\n        if (undef_BL) {\n          return 0;\n        }\n\n        a_node.y = this.phylotree.branch_length_accessor(a_node);\n\n        if (typeof a_node.y === \"undefined\") {\n          undef_BL = true;\n          return 0;\n        }\n        a_node.y += a_node.parent.y;\n      } else {\n        a_node.y = is_leaf ? this.max_depth : a_node.depth;\n      }\n    } else {\n      this.x = 0.0;\n      // the span of the last node laid out in the top to bottom hierarchy\n      a_node.y = 0.0;\n      this.last_node = null;\n      this.last_span = 0.0;\n      this._extents = [[0, 0], [0, 0]];\n    }\n\n    /** the next block has to do with top-to-bottom spacing of nodes **/\n\n    if (is_leaf) {\n      // displayed internal nodes are handled in `process_internal_node`\n      this._handle_single_node_layout(\n        a_node\n      );\n    }\n\n    if (!is_leaf) {\n      // for internal nodes\n      if (\n        render_nodes.isNodeCollapsed(a_node) &&\n        !this.is_under_collapsed_parent\n      ) {\n        // collapsed node\n        this.save_x = this.x;\n        this.save_span = this.last_span * 0.5;\n        this.is_under_collapsed_parent = true;\n        this.process_internal_node(a_node);\n        this.is_under_collapsed_parent = false;\n \n        if (typeof a_node.x === \"number\") {\n          a_node.x =\n            this.save_x +\n            (a_node.x -this.save_x) * this.options[\"compression\"] +\n            this.save_span;\n\n          a_node.collapsed = [[a_node.x, a_node.y]];\n\n          var map_me = n => {\n            n.hidden = true;\n\n            if (isLeafNode(n)) {            \n              this.x = n.x =\n                this.save_x +\n                (n.x - this.save_x) * this.options[\"compression\"] +\n                this.save_span;\n\n              a_node.collapsed.push([n.x, n.y]);             \n            } else {\n              n.children.map(map_me);\n            }\n          };\n\n          this.x = this.save_x;\n          map_me(a_node);\n         \n\n          a_node.collapsed.splice(1, 0, [this.save_x, a_node.y]);\n          a_node.collapsed.push([this.x, a_node.y]);\n          a_node.collapsed.push([a_node.x, a_node.y]);\n          a_node.hidden = false;\n        }\n      } else {\n        // normal node, or under a collapsed parent\n        this.process_internal_node(a_node);\n      }\n    }\n\n    return a_node.x;\n  }\n\n  process_internal_node(a_node) {\n    /** \n            decide if the node will be shown, and compute its top-to-bottom (breadthwise)\n            placement \n        */\n\n    let count_undefined = 0;\n\n    if (this.showInternalName(a_node)) {\n      // do in-order traversal to allow for proper internal node spacing\n      // (x/2) >> 0 is integer division\n      let half_way = (a_node.children.length / 2) >> 0;\n      let displayed_children = 0;\n      let managed_to_display = false;\n\n      for (let child_id = 0; child_id < a_node.children.length; child_id++) {\n        let child_x = this.tree_layout(a_node.children[child_id]).bind(this);\n\n        if (typeof child_x == \"number\") {\n          displayed_children++;\n        }\n\n        if (displayed_children >= half_way && !managed_to_display) {\n          this._handle_single_node_layout(a_node);\n          managed_to_display = true;\n        }\n      }\n\n      if (displayed_children == 0) {\n        a_node.notshown = true;\n        a_node.x = undefined;\n      } else {\n        if (!managed_to_display) {\n          this._handle_single_node_layout(a_node);\n        }\n      }\n    } else {\n      // postorder layout\n      a_node.x = a_node.children\n        .map(this.tree_layout.bind(this))\n        .reduce((a, b) => {\n          if (typeof b == \"number\") return a + b;\n          count_undefined += 1;\n          return a;\n        }, 0.0);\n\n      if (count_undefined == a_node.children.length) {\n        a_node.notshown = true;\n        a_node.x = undefined;\n      } else {\n        a_node.x /= a_node.children.length - count_undefined;\n      }\n    }\n  }\n\n  do_lr(at_least_one_dimension_fixed) {\n    if (this.radial() && at_least_one_dimension_fixed) {\n      this.offsets[1] = 0;\n    }\n\n    if (this.options[\"left-right-spacing\"] == \"fixed-step\") {\n      this.size[1] = this.max_depth * this.fixed_width[1];\n\n      this.scales[1] = \n        (this.size[1] - this.offsets[1] - this.options[\"left-offset\"]) /\n        this._extents[1][1];\n\n      this.label_width = this._label_width(this.shown_font_size);\n\n      if (this.radial()) {\n        this.label_width *= 2;\n      }\n    } else {\n      this.label_width = this._label_width(this.shown_font_size);\n\n      at_least_one_dimension_fixed = true;\n\n      let available_width =\n        this.size[1] - this.offsets[1] - this.options[\"left-offset\"];\n\n      if (available_width * 0.5 < this.label_width) {\n        this.shown_font_size *= (available_width * 0.5) / this.label_width;\n        this.label_width = available_width * 0.5;\n      }\n\n      this.scales[1] =\n        (this.size[1] -\n          this.offsets[1] -\n          this.options[\"left-offset\"] -\n          this.label_width) /\n        this._extents[1][1];\n    }\n  }\n\n  /**\n   * Place the current nodes, i.e., determine their coordinates based\n   * on current settings.\n   *\n   * @returns The current ``phylotree``.\n   */\n  placenodes() {\n    this._extents = [\n      [0, 0],\n      [0, 0]\n    ];\n\n    this.x = 0.0;\n    this.last_span = 0.0;\n    //let x = 0.0,\n    //  last_span = 0;\n    \n    this.last_node = null;\n    this.last_span = 0.0;\n\n    (this.save_x = this.x), (this.save_span = this.last_span * 0.5);\n\n    this.do_scaling = this.options[\"scaling\"];\n    let undef_BL = false;\n\n    this.is_under_collapsed_parent = false;\n    this.max_depth = 1;\n    \n    // Set initial x\n    this.phylotree.nodes.x = this.tree_layout(\n      this.phylotree.nodes,\n      this.do_scaling\n    );\n\n    this.max_depth = d3.max(this.phylotree.nodes.descendants(), n => {\n      return n.depth;\n    });\n\n    if (this.do_scaling && undef_BL) {\n      // requested scaling, but some branches had no branch lengths\n      // redo layout without branch lengths\n      this.do_scaling = false;\n      this.phylotree.nodes.x = this.tree_layout(this.phylotree.nodes);\n    }\n\n    let at_least_one_dimension_fixed = false;\n\n    this.draw_scale_bar = this.options[\"show-scale\"] && this.do_scaling;\n\n    // this is a hack so that phylotree.pad_height would return ruler spacing\n    this.offsets[1] = Math.max(\n      this.font_size,\n      -this._extents[1][0] * this.fixed_width[0]\n    );\n\n    if (this.options[\"top-bottom-spacing\"] == \"fixed-step\") {\n      this.size[0] = this._extents[0][1] * this.fixed_width[0];\n      this.scales[0] = this.fixed_width[0];\n    } else {\n      this.scales[0] = (this.size[0] - this.pad_height()) / this._extents[0][1];\n      at_least_one_dimension_fixed = true;\n    }\n\n    this.shown_font_size = Math.min(this.font_size, this.scales[0]);\n\n    if (this.radial()) {\n      // map the nodes to polar coordinates\n      this.draw_branch = _.partial(drawArc, this.radial_center);\n      this.edge_placer = arcSegmentPlacer;\n\n      let last_child_angle = null,\n        last_circ_position = null,\n        last_child_radius = null,\n        min_radius = 0,\n        effective_span = this._extents[0][1] * this.scales[0];\n\n      let compute_distance = function(r1, r2, a1, a2, annular_shift) {\n        annular_shift = annular_shift || 0;\n        return Math.sqrt(\n          (r2 - r1) * (r2 - r1) +\n            2 *\n              (r1 + annular_shift) *\n              (r2 + annular_shift) *\n              (1 - Math.cos(a1 - a2))\n        );\n      };\n\n      let max_r = 0;\n\n      this.phylotree.nodes.each(d => {\n        let my_circ_position = d.x * this.scales[0];\n        d.angle = (2 * Math.PI * my_circ_position) / effective_span;\n        d.text_angle = d.angle - Math.PI / 2;\n        d.text_angle = d.text_angle > 0 && d.text_angle < Math.PI;\n        d.text_align = d.text_angle ? \"end\" : \"start\";\n        d.text_angle = (d.text_angle ? 180 : 0) + (d.angle * 180) / Math.PI;\n      });\n\n      this.do_lr(at_least_one_dimension_fixed);\n\n      this.phylotree.nodes.each(d => {\n        d.radius = (d.y * this.scales[1]) / this.size[1];\n        max_r = Math.max(d.radius, max_r);\n      });\n\n      let annular_shift = 0;\n\n      this.phylotree.nodes.each(d => {\n        if (!d.children) {\n          let my_circ_position = d.x * this.scales[0];\n          if (last_child_angle !== null) {\n            let required_spacing = my_circ_position - last_circ_position,\n              radial_dist = compute_distance(\n                d.radius,\n                last_child_radius,\n                d.angle,\n                last_child_angle,\n                annular_shift\n              );\n\n            let local_mr =\n              radial_dist > 0\n                ? required_spacing / radial_dist\n                : 10 * this.options[\"max-radius\"];\n\n            if (local_mr > this.options[\"max-radius\"]) {\n              // adjust the annular shift\n              let dd = required_spacing / this.options[\"max-radius\"],\n                b = d.radius + last_child_radius,\n                c =\n                  d.radius * last_child_radius -\n                  (dd * dd -\n                    (last_child_radius - d.radius) *\n                      (last_child_radius - d.radius)) /\n                    2 /\n                    (1 - Math.cos(last_child_angle - d.angle)),\n                st = Math.sqrt(b * b - 4 * c);\n\n              annular_shift = Math.min(\n                this.options[\"annular-limit\"] * max_r,\n                (-b + st) / 2\n              );\n              min_radius = this.options[\"max-radius\"];\n            } else {\n              min_radius = Math.max(min_radius, local_mr);\n            }\n          }\n\n          last_child_angle = d.angle;\n          last_circ_position = my_circ_position;\n          last_child_radius = d.radius;\n        }\n      });\n\n      this.radius = Math.min(\n        this.options[\"max-radius\"],\n        Math.max(effective_span / 2 / Math.PI, min_radius)\n      );\n\n      if (at_least_one_dimension_fixed) {\n        this.radius = Math.min(\n          this.radius,\n          (Math.min(effective_span, this._extents[1][1] * this.scales[1]) -\n            this.label_width) *\n            0.5 -\n            this.radius * annular_shift\n        );\n      }\n\n      this.radial_center = this.radius_pad_for_bubbles = this.radius;\n      this.draw_branch = _.partial(drawArc, this.radial_center);\n\n      let scaler = 1;\n\n      if (annular_shift) {\n        scaler = max_r / (max_r + annular_shift);\n        this.radius *= scaler;\n      }\n\n      this.phylotree.nodes.each(d => {\n        cartesianToPolar(\n          d,\n          this.radius,\n          annular_shift,\n          this.radial_center,\n          this.scales,\n          this.size\n        );\n\n        max_r = Math.max(max_r, d.radius);\n\n        if (this.options[\"draw-size-bubbles\"]) {\n          this.radius_pad_for_bubbles = Math.max(\n            this.radius_pad_for_bubbles,\n            d.radius + this.nodeBubbleSize(d)\n          );\n        } else {\n          this.radius_pad_for_bubbles = Math.max(\n            this.radius_pad_for_bubbles,\n            d.radius\n          );\n        }\n\n        if (d.collapsed) {\n          d.collapsed = d.collapsed.map(p => {\n            let z = {};\n            z.x = p[0];\n            z.y = p[1];\n            z = cartesianToPolar(\n              z,\n              this.radius,\n              annular_shift,\n              this.radial_center,\n              this.scales,\n              this.size\n            );\n            return [z.x, z.y];\n          });\n\n          let last_point = d.collapsed[1];\n\n          d.collapsed = d.collapsed.filter(function(p, i) {\n            if (i < 3 || i > d.collapsed.length - 4) return true;\n            if (\n              Math.sqrt(\n                Math.pow(p[0] - last_point[0], 2) +\n                  Math.pow(p[1] - last_point[1], 2)\n              ) > 3\n            ) {\n              last_point = p;\n              return true;\n            }\n            return false;\n          });\n        }\n      });\n\n      this.size[0] = this.radial_center + this.radius / scaler;\n      this.size[1] = this.radial_center + this.radius / scaler;\n    } else {\nthis.do_lr();\n\n      this.draw_branch = draw_line;\n      this.edge_placer = lineSegmentPlacer;\n      this.right_most_leaf = 0;\n\n      this.phylotree.nodes.each(d => {\n\n        d.x *= this.scales[0];\n        d.y *= this.scales[1]*.8;\n\n        if (this.options[\"layout\"] == \"right-to-left\") {   \n          d.y = this._extents[1][1] * this.scales[1] - d.y;\n        }\n\n\n        if (isLeafNode(d)) {\n          this.right_most_leaf = Math.max(\n            this.right_most_leaf,\n            d.y + this.nodeBubbleSize(d)\n          );\n        }\n\n        if (d.collapsed) {\n          d.collapsed.forEach(p => {\n            p[0] *= this.scales[0];\n            p[1] *= this.scales[1]*.8;\n          });\n\n          let last_x = d.collapsed[1][0];\n\n          d.collapsed = d.collapsed.filter(function(p, i) {\n            if (i < 3 || i > d.collapsed.length - 4) return true;\n            if (p[0] - last_x > 3) {\n              last_x = p[0];\n              return true;\n            }\n            return false;\n          });\n        }\n      });\n    }\n\n    if (this.draw_scale_bar) {\n      let domain_limit, range_limit;\n\n      if (this.radial()) {\n        range_limit = Math.min(this.radius / 5, 50);\n        domain_limit = Math.pow(\n          10,\n          Math.ceil(\n            Math.log((this._extents[1][1] * range_limit) / this.radius) /\n              Math.log(10)\n          )\n        );\n        \n\n        range_limit = domain_limit * (this.radius / this._extents[1][1]);\n\n        if (range_limit < 30) {\n          let stretch = Math.ceil(30 / range_limit);\n          range_limit *= stretch;\n          domain_limit *= stretch;\n        }\n      } else {\n        domain_limit = this._extents[1][1];\n\n        range_limit =\n          this.size[1] - this.offsets[1] - this.options[\"left-offset\"] - this.shown_font_size;\n     }\n\n      let scale = d3\n          .scaleLinear()\n          .domain([0, domain_limit])\n          .range([0, range_limit]),\n         \n          scaleTickFormatter = d3.format(\".2f\");\n\n      this.draw_scale_bar = d3\n        .axisTop()\n        .scale(scale)\n        .tickFormat(function(d) {\n          if (d === 0) {\n            return \"\";\n          }\n          return scaleTickFormatter(d);\n        });\n\n      if (this.radial()) {\n        this.draw_scale_bar.tickValues([domain_limit]);\n      } else {\n        let round = function(x, n) {\n          return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n        };\n\n        let my_ticks = scale.ticks();\n        my_ticks = my_ticks.length > 1 ? my_ticks[1] : my_ticks[0];\n\n        this.draw_scale_bar.ticks(\n          Math.min(\n            10,\n            round(\n              range_limit /\n                (this.shown_font_size *\n                  scaleTickFormatter(my_ticks).length *\n                  2),\n              0\n            )\n          )\n        );\n      }\n    } else {\n      this.draw_scale_bar = null;\n    }\n\n    return this;\n  }\n\n  /**\n   * Get or set spacing in the x-direction.\n   *\n   * @param {Number} attr (Optional), the new spacing value if setting.\n   * @param {Boolean} skip_render (Optional), whether or not a refresh should be performed.\n   * @returns The current ``spacing_x`` value if getting, or the current ``phylotree`` if setting.\n   */\n  spacing_x(attr, skip_render) {\n    if (!arguments.length) return this.fixed_width[0];\n\n    if (\n      this.fixed_width[0] != attr &&\n      attr >= this.options[\"minimum-per-node-spacing\"] &&\n      attr <= this.options[\"maximum-per-node-spacing\"]\n    ) {\n      this.fixed_width[0] = attr;\n      if (!skip_render) {\n        this.placenodes();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Get or set spacing in the y-direction.\n   *\n   * @param {Number} attr (Optional), the new spacing value if setting.\n   * @param {Boolean} skip_render (Optional), whether or not a refresh should be performed.\n   * @returns The current ``spacing_y`` value if getting, or the current ``phylotree`` if setting.\n   */\n  spacing_y(attr, skip_render) {\n    if (!arguments.length) return this.fixed_width[1];\n\n    if (\n      this.fixed_width[1] != attr &&\n      attr >= this.options[\"minimum-per-level-spacing\"] &&\n      attr <= this.options[\"maximum-per-level-spacing\"]\n    ) {\n      this.fixed_width[1] = attr;\n      if (!skip_render) {\n        this.placenodes();\n      }\n    }\n    return this;\n  }\n\n  _label_width(_font_size) {\n    _font_size = _font_size || this.shown_font_size;\n    let width = 0;\n\n    this.phylotree.nodes\n      .descendants()\n      .filter(render_nodes.nodeVisible)\n      .forEach(node => {\n        let node_width = 12 + this._nodeLabel(node).length * _font_size * 0.8;\n\n        if (node.angle !== null) {\n          node_width *= Math.max(\n            Math.abs(Math.cos(node.angle)),\n            Math.abs(Math.sin(node.angle))\n          );\n        }\n        width = Math.max(node_width, width);\n      });\n\n    return width;\n  }\n\n  /**\n   * Get or set font size.\n   *\n   * @param {Function} attr Empty if getting, or new font size if setting.\n   * @returns The current ``font_size`` accessor if getting, or the current ``phylotree`` if setting.\n   */\n  font_size(attr) {\n    if (!arguments.length) return this.font_size;\n    this.font_size = attr === undefined ? 12 : attr;\n    return this;\n  }\n\n  scale_bar_font_size(attr) {\n    if (!arguments.length) return this.scale_bar_font_size;\n    this.scale_bar_font_size = attr === undefined ? 12 : attr;\n    return this;\n  }\n\n  node_circle_size(attr, attr2) {\n    if (!arguments.length) return this.options[\"node_circle_size\"];\n    this.options[\"node_circle_size\"] = constant(attr === undefined ? 3 : attr);\n    return this;\n  }\n\n  css(opt) {\n    if (arguments.length === 0) return this.css_classes;\n\n    if (arguments.length > 2) {\n      var arg = {};\n      arg[opt[0]] = opt[1];\n      return this.css(arg);\n    }\n\n    for (var key in css_classes) {\n      if (key in opt && opt[key] != css_classes[key]) {\n        css_classes[key] = opt[key];\n      }\n    }\n\n    return this;\n  }\n\n  transitions(arg) {\n    if (arg !== undefined) {\n      return arg;\n    }\n\n    if (this.options[\"transitions\"] !== null) {\n      return this.options[\"transitions\"];\n    }\n\n    return this.phylotree.nodes.descendants().length <= 300;\n  }\n\n  /**\n   * Get or set CSS classes.\n   *\n   * @param {Object} opt Keys are the CSS class to toggle and values are\n   * the parameters for that CSS class.\n   * @param {Boolean} run_update (optional) Whether or not the tree should update.\n   * @returns The current ``phylotree``.\n   */\n  css_classes(opt, run_update) {\n    if (!arguments.length) return this.css_classes;\n\n    let do_update = false;\n\n    for (var key in css_classes) {\n      if (key in opt && opt[key] != this.css_classes[key]) {\n        do_update = true;\n        this.css_classes[key] = opt[key];\n      }\n    }\n\n    if (run_update && do_update) {\n      this.layout();\n    }\n\n    return this;\n  }\n\n  /**\n   * Lay out the tree within the SVG.\n   *\n   * @param {Boolean} transitions Specify whether or not transitions should occur.\n   * @returns The current ``phylotree``.\n   */\n  layout(transitions) {\n    if (this.svg) {\n      this.svg.selectAll(\n        \".\" +\n          this.css_classes[\"tree-container\"] +\n          \",.\" +\n          this.css_classes[\"tree-scale-bar\"] +\n          \",.\" +\n          this.css_classes[\"tree-selection-brush\"]\n      );\n\n      //.remove();\n      this.d3PhylotreeTriggerLayout(this);\n      return this.update();\n    }\n\n    this.d3PhylotreeTriggerLayout(this);\n    return this;\n  }\n\n  handle_node_click(node) {\n    this.nodeDropdownMenu(node, this.container, this, this.options);\n  }\n\n  refresh() {\n    if (this.svg) {\n      // for re-entrancy\n      let enclosure = this.svg.selectAll(\n        \".\" + this.css_classes[\"tree-container\"]\n      );\n\n      let edges = enclosure\n        .selectAll(render_edges.edgeCssSelectors(this.css_classes))\n        .attr(\"class\", this.reclassEdge.bind(this));\n\n      if (this.edge_styler) {\n        edges.each(d => {\n          this.edge_styler(d3.select(this), d);\n        });\n      }\n\n      //let nodes = this.enclosure\n      //  .selectAll(inspector.nodeCssSelectors(this.css_classes))\n      //  .attr(\"class\", this.phylotree.reclassNode);\n\n      //if (this.node_styler) {\n      //  nodes.each(function(d) {\n      //    this.node_styler(d3.select(this), d);\n      //  });\n      //}\n    }\n\n    return this;\n  }\n\n  countHandler(attr) {\n    if (!arguments.length) return this.count_listener_handler;\n    this.count_listener_handler = attr;\n    return this;\n  }\n\n  /**\n   * Get or set node styler. If setting, pass a function of two arguments,\n   * ``element`` and ``data``. ``data`` exposes the underlying node so that\n   * its attributes can be referenced. These can be used to apply styles to\n   * ``element``, which will be a D3 selection corresponding to the SVG element\n   * that makes up the current node.\n   * ``transition`` is the third argument which indicates that there is an ongoing\n   * d3 transition in progress\n   *\n   * @param {Function} attr - Optional; if setting, the node styler function to be set.\n   * @returns The ``node_styler`` function if getting, or the current ``phylotree`` if setting.\n   */\n  style_nodes(attr) {\n    if (!arguments.length) return this.node_styler;\n    this.node_styler = attr;\n    return this;\n  }\n\n  /**\n   * Get or set edge styler. If setting, pass a function of two arguments,\n   * ``element`` and ``data``. ``data`` exposes the underlying edge so that\n   * its attributes can be referenced. These can be used to apply styles to\n   * ``element``, which will be a D3 selection corresponding to the SVG element\n   * that makes up the current edge.\n   *\n   * Note that, in accordance with the D3 hierarchy layout, edges will have\n   * a ``source`` and ``target`` field, corresponding to the nodes that make up\n   * up the associated branch.\n   *\n   * @param {Function} attr - Optional; if setting, the node styler function to be set.\n   * @returns The ``edge_styler`` function if getting, or the current ``phylotree`` if setting.\n   */\n  style_edges(attr) {\n    if (!arguments.length) return this.edge_styler;\n    this.edge_styler = attr.bind(this);\n    return this;\n  }\n\n  itemSelected(item, tag) {\n    return item[tag] || false;\n  }\n\n  show() {\n    return this.svg.node()\n  }\n\n}\n\n_.extend(TreeRender.prototype, clades);\n_.extend(TreeRender.prototype, render_nodes);\n_.extend(TreeRender.prototype, render_edges);\n_.extend(TreeRender.prototype, events);\n_.extend(TreeRender.prototype, menus);\n_.extend(TreeRender.prototype, opt);\n\nexport default TreeRender;\n","import * as d3 from \"d3\";\nimport * as _ from \"underscore\";\n\nimport { default as parser_registry } from \"./formats/registry\";\nimport { default as newickParser, getNewick } from \"./formats/newick\";\nimport { default as getTipLengths } from \"./export\";\nimport * as nexus from \"./formats/nexus\";\nimport { default as phyloxml_parser } from \"./formats/phyloxml\";\nimport { default as maxParsimony } from \"./max-parsimony\";\nimport { leftChildRightSibling, postOrder, preOrder, default as inOrder } from \"./traversal\";\n\nimport {\n  default as hasBranchLengths,\n  getBranchLengths,\n  defBranchLengthAccessor,\n  setBranchLength,\n  branchName,\n  normalize,\n  scale\n} from \"./branches\";\n\nimport * as node_operations from \"./nodes\";\nimport * as rooting from \"./rooting\";\nimport { default as TreeRender } from \"./render/draw\";\n\nfunction resortChildren(comparator, start_node, filter) {\n  // ascending\n  this.nodes\n    .sum(function(d) {\n      return d.value;\n    })\n    .sort(comparator);\n\n  // if a tree is rendered in the DOM\n  if (this.display) {\n    this.display.update_layout(this.nodes);\n    this.display.update();\n  }\n\n  return this;\n}\n\n/**\n * Return most recent common ancestor of a pair of nodes.\n * @returns An array of strings, comprising each tag that was read.\n */\nfunction mrca() {\n\n  var mrca_nodes, mrca;\n\n  if (arguments.length == 1) {\n    mrca_nodes = arguments[0];\n  } else {\n    mrca_nodes = Array.from(arguments);\n  }\n\n  mrca_nodes = mrca_nodes.map(function(mrca_node) {\n    return typeof mrca_node == \"string\" ? mrca_node : mrca_node.name;\n  });\n\n  this.traverse_and_compute(function(node) {\n    if (!node.children) {\n      node.mrca = _.intersection([node.name], mrca_nodes);\n    } else if (!node.parent) {\n      if (!mrca) {\n        mrca = node;\n      }\n    } else {\n      node.mrca = _.union(...node.descendants().map(child => child.mrca));\n      if (!mrca && node.mrca.length == mrca_nodes.length) {\n        mrca = node;\n      }\n    }\n  });\n\n  return mrca;\n\n}\n\n/**\n * An instance of a phylotree. Sets event listeners, parses tags, and creates links\n * that represent branches.\n *\n * @param {Object} nwk - A Newick string, PhyloXML string, or hierarchical JSON representation of a phylogenetic tree.\n * @param {Object} options\n * - boostrap_values\n * - type - format type\n * @returns {Phylotree} phylotree - itself, following the builder pattern.\n */\nlet Phylotree = class {\n\n  constructor(nwk, options = {}) {\n\n    this.newick_string = \"\";\n\n    this.nodes = [];\n    this.links = [];\n    this.parsed_tags = [];\n    this.partitions = [];\n    this.branch_length_accessor = defBranchLengthAccessor;\n    this.branch_length = defBranchLengthAccessor;\n    this.logger = options.logger || console;\n    this.selection_attribute_name = \"selected\";\n\n    // initialization\n    var type = options.type || undefined,\n      _node_data = [],\n      self = this;\n\n    // If the type is a string, check the parser_registry\n    if (_.isString(type)) {\n      if (type in parser_registry) {\n        _node_data = parser_registry[type](nwk, options);\n      } else {\n        // Hard failure\n        self.logger.error(\n          \"type \" +\n            type +\n            \" not in registry! Available types are \" +\n            _.keys(parser_registry)\n        );\n      }\n    } else if (_.isFunction(type)) {\n      // If the type is a function, try executing the function\n      try {\n        _node_data = type(nwk, options);\n      } catch (e) {\n        // Hard failure\n        self.logger.error(\"Could not parse custom format!\");\n      }\n    } else {\n      // this builds children and links;\n      if (nwk.name == \"root\") {\n        // already parsed by phylotree.js\n        _node_data = { json: nwk, error: null };\n      } else if (typeof nwk != \"string\") {\n        // old default\n        _node_data = nwk;\n      } else if (nwk.contentType == \"application/xml\") {\n        // xml\n        _node_data = phyloxml_parser(nwk);\n      } else {\n        // newick string\n        this.newick_string = nwk;\n        _node_data = newickParser(nwk, options);\n      }\n\n    }\n\n    if (!_node_data[\"json\"]) {\n\n      self.nodes = [];\n\n    } else {\n\n      self.nodes = d3.hierarchy(_node_data.json);\n\n      // Parse tags\n      let _parsed_tags = {};\n\n      self.nodes.each(node => {\n        if (node.data.annotation) {\n          _parsed_tags[node.data.annotation] = true;\n        }\n      });\n\n      self.parsed_tags = Object.keys(_parsed_tags);\n\n    }\n\n    self.links = self.nodes.links();\n\n    // If no branch lengths are supplied, set all to 1\n    if(!this.hasBranchLengths()) {\n      console.warn(\"Phylotree User Warning : NO BRANCH LENGTHS DETECTED, SETTING ALL LENGTHS TO 1\");\n      this.setBranchLength(x => 1)\n    }\n\n    return self;\n\n  }\n\n  /*\n    Export the nodes of the tree with all local keys to JSON\n    The return will be an array of nodes in the specified traversal_type\n    ('post-order' : default, 'pre-order', or 'in-order')\n    with parents and children referring to indices in that array\n\n  */\n  json(traversal_type) {\n\n    var index = 0;\n\n    this.traverse_and_compute(function(n) {\n      n.json_export_index = index++;\n    }, traversal_type);\n\n    var node_array = new Array(index);\n\n    index = 0;\n\n    this.traverse_and_compute(function(n) {\n      let node_copy = _.clone(n);\n      delete node_copy.json_export_index;\n\n      if (n.parent) {\n        node_copy.parent = n.parent.json_export_index;\n      }\n\n      if (n.children) {\n        node_copy.children = _.map(n.children, function(c) {\n          return c.json_export_index;\n        });\n      }\n      node_array[index++] = node_copy;\n    }, traversal_type);\n\n    this.traverse_and_compute(function(n) {\n      delete n.json_export_index;\n    }, traversal_type);\n\n    return JSON.stringify(node_array);\n  }\n\n  /*\n   * Traverse the tree in a prescribed order, and compute a value at each node.\n   *\n   * @param {Function} callback A function to be called on each node.\n   * @param {String} traversal_type Either ``\"pre-order\"`` or ``\"post-order\"`` or ``\"in-order\"``.\n   * @param {Node} root_node start traversal here, if provided, otherwise start at root\n   * @param {Function} backtrack ; if provided, then at each node n, backtrack (n) will be called,\n                                   and if it returns TRUE, traversal will NOT continue past into this\n                                   node and its children\n   */\n  traverse_and_compute(callback, traversal_type, root_node, backtrack) {\n    traversal_type = traversal_type || \"post-order\";\n\n    function post_order(node) {\n      if (_.isUndefined(node)) {\n        return;\n      }\n\n      postOrder(node, callback, backtrack);\n\n    }\n\n    function pre_order(node) {\n      preOrder(node, callback, backtrack);\n    }\n\n    function in_order(node) {\n      inOrder(node, callback, backtrack);\n    }\n\n    if (traversal_type == \"pre-order\") {\n      traversal_type = pre_order;\n    } else {\n      if (traversal_type == \"in-order\") {\n        traversal_type = in_order;\n      } else {\n        traversal_type = post_order;\n      }\n    }\n\n    traversal_type(root_node ? root_node : this.nodes);\n\n    return this;\n\n  }\n\n  get_parsed_tags() {\n    return this.parsed_tags;\n  }\n\n  update(json) {\n    // update with new hiearchy layout\n    this.nodes = json;\n  }\n\n  // Warning : Requires DOM!\n  render(options) {\n    this.display = new TreeRender(this, options);\n    return this.display;\n  }\n\n};\n\nPhylotree.prototype.isLeafNode = node_operations.isLeafNode;\nPhylotree.prototype.mrca = mrca;\nPhylotree.prototype.hasBranchLengths = hasBranchLengths;\nPhylotree.prototype.getBranchLengths = getBranchLengths;\nPhylotree.prototype.branchName = branchName;\nPhylotree.prototype.normalizeBranchLengths = normalize;\nPhylotree.prototype.scaleBranchLengths = scale;\nPhylotree.prototype.getNewick = getNewick;\nPhylotree.prototype.resortChildren = resortChildren;\nPhylotree.prototype.setBranchLength = setBranchLength;\nPhylotree.prototype.maxParsimony = maxParsimony;\n\nPhylotree.prototype.getTipLengths = getTipLengths;\nPhylotree.prototype.leftChildRightSibling = leftChildRightSibling;\n\n_.extend(Phylotree.prototype, node_operations);\n_.extend(Phylotree.prototype, rooting);\n_.extend(Phylotree.prototype, nexus);\n\nexport function itemTagged(item) {\n  return item.tag || false;\n}\n\nexport default Phylotree;\n","import * as _ from \"underscore\";\n\n/*\n *  given a tree, this function will compute quantities required to work with \n *  all v all pairwise distances (like in COT) \n *\n *  @param   tree the tree object\n *  @returns leaf count\n *\n */\nfunction computePairwiseDistances(tree) {\n  /*\n   *    traverse the tree and populate the following values in each node\n   *        \n   *        .cot_computed_length -> for each node (except the root), the current branch length \n   *                                (so as to not compute them each time via a callback) \n   *        .cot_leaf_index      -> post_order traversal order of a leaf (0 to number of leaves - 1)\n   *        \n   *        for each node\n   *        \n   *        .cot_path_to_leaves_below   \n   *                             -> a dictionary that maps a leaf index to the total path length from this node\n   *                                to each of the descendant leaves, EXCLUDING the length of this branch\n   *\n   *        .cot_path_to_leaves_above   \n   *                             -> a dictionary that maps a leaf index to the total path length from this node\n   *                                to each of the leaves outside the split defined by this node, EXCLUDING\n   *                                the length of this branch\n   */\n\n  var bl = tree.branch_length_accessor;\n\n  if (!bl) {\n    throw \"A non-null branch lengths accessor function is required for this operation\";\n  }\n\n  var leaf_count = 0;\n\n  tree.traverse_and_compute(function(n) {\n    n.cot_computed_length = bl(n);\n\n \n    if (n.parent && _.isUndefined(n.cot_computed_length)) {\n      throw \"Non-null branch lengths are required for this operation: missing branch length at node \" + n.data.name;\n    }\n\n    if (tree.isLeafNode(n)) {\n      n.cot_leaf_index = leaf_count++;\n      n.cot_path_to_leaves_below = {};\n      n.cot_path_to_leaves_below[n.cot_leaf_index] = 0;\n      n.cot_path_to_leaves_above = {};\n    } else {\n      n.cot_path_to_leaves_below = {};\n      n.cot_path_to_leaves_above = {};\n    }\n  });\n\n  // populate all cot_path_to_leaves_below\n  tree.traverse_and_compute(function(n) {\n    if (n.parent) {\n      _.each(n.cot_path_to_leaves_below, function(length_so_far, leaf_index) {\n        n.parent.cot_path_to_leaves_below[leaf_index] =\n          length_so_far + n.cot_computed_length;\n      });\n    }\n  });\n\n  // populate all cot_path_to_leaves_above; this is done via a 'pre-order' traversal\n  // handle root node first\n  var root_node = tree.getRootNode();\n\n  function CopyFromSiblings(a_node) {\n    for (var this_node = 0; this_node < a_node.children.length; this_node++) {\n      for (\n        var other_node = 0;\n        other_node < a_node.children.length;\n        other_node++\n      ) {\n        if (this_node != other_node) {\n          _.each(a_node.children[other_node].cot_path_to_leaves_below, function(\n            length,\n            index\n          ) {\n            if (a_node.children[this_node].cot_path_to_leaves_above) {\n              a_node.children[this_node].cot_path_to_leaves_above[index] =\n                length + a_node.children[other_node].cot_computed_length;\n            }\n          });\n        }\n      }\n    }\n  }\n\n  CopyFromSiblings(root_node);\n\n  // takes two passes\n\n  tree.traverse_and_compute(function(n) {\n    if (n.parent) {\n      // copy parent's 'above' nodes\n      _.each(n.parent.cot_path_to_leaves_above, function(\n        length_so_far,\n        leaf_index\n      ) {\n        n.cot_path_to_leaves_above[leaf_index] =\n          length_so_far + n.parent.cot_computed_length;\n      });\n\n      if (!tree.isLeafNode(n)) {\n        CopyFromSiblings(n);\n      }\n      // copy sibling's 'below' nodes\n    }\n  }, \"pre-order\");\n\n  return leaf_count;\n}\n\nexport default computePairwiseDistances;\n","import * as _ from \"underscore\";\n\n/*\n * The Sackin's index is computed as the sum of the number of ancestors for each\n * tips of the tree.\n *\n * The less balanced a tree is, the larger its Sackin's index.\n *\n */\n\nexport default function sackin(tree) {\n\n  // Get tips of tree\n  let tips = tree.getTips();\n\n  // Count number of ancestors to root for each tree\n  let depths = _.map(tips, d => { return d.depth });\n\n  return _.reduce(depths, function(memo, num){ return memo + num; }, 0);\n\n}\n","import * as _ from \"underscore\";\n\n/*\n *special case for L^2\n *\n *For a fixed branch B, we have one parameter : where to break the branch `t` in [0, T], \n *where T is the branch length\n *\n *D   = sum (a is a leaf above B) [d(B,a) + (T-t)] ^ 2 +\n *      sum (b is a leaf below B) [d(B,b) + t] ^ 2;\n *      \n *expanding, we have \n *\n *D   = sum (a is a leaf above B) [d^2 (B,a) + 2(T-t) d(B,a) + (T-t)^2]\n *      sum (b is a leaf below B) [d^2 (B,b) + 2(t) d(B,b) + t^2]\n *      \n *    = (sum distances above)^2 + sum (distances above)*2(T-t) + (T-t)^2 * # leaves_above\n *      (sum distances below)^2 + sum (distances below)*2*t    + t^2 * # leaves_below\n *\n *      \n *Taking a derivative with respect to t we have\n *\n *dD / dt = - 2 sum (a is a leaf above B) [d(B,a) + (T-t)]\n *          + 2 sum (b is a leaf below B) [d(B,b) + t]\n *          \n *\n *second derivative is positive the function is convex, so can set to the nearest boundary if solution is outside range\n *\n *setting dD / dt to zero, we have \n *\n *- sum (distances leaves above) - T * (#leaves above) + t * (#leaves above) + sum (distances leaves below) + t * (#leaves below) = 0\n *\n *t = [sum (distances leaves above) - sum (distances leaves below) + T * (#leaves above)] / (#leaves)\n */\n\nimport { default as pairwise_distances } from \"./pairwise-distances\";\n\nexport function centerOfTree(tree, power) {\n  power = power || 2;\n\n  var leaf_count = pairwise_distances(tree);\n\n  var current_min = Number.MAX_VALUE,\n    current_split = 0,\n    current_location = null;\n\n  if (power == 2) {\n    tree.traverse_and_compute(function(n) {\n      if (n.parent) {\n        // can't consider the root\n        var sum_below = 0,\n          sum_below_squared = 0,\n          sum_above = 0,\n          sum_above_squared = 0;\n\n        var count_below = 0;\n\n        _.each(n.cot_path_to_leaves_below, function(l) {\n          sum_below += l;\n          sum_below_squared += l * l;\n          count_below++;\n        });\n\n        _.each(n.cot_path_to_leaves_above, function(l) {\n          sum_above += l;\n          sum_above_squared += l * l;\n        });\n\n        var count_above = leaf_count - count_below;\n\n        var tt =\n          (sum_above - sum_below + n.cot_computed_length * count_above) /\n          leaf_count;\n        if (tt < 0) {\n          tt = 0;\n        } else if (tt > n.cot_computed_length) {\n          tt = n.cot_computed_length;\n        }\n\n        var score =\n          sum_above_squared +\n          sum_below_squared +\n          2 * (sum_above * (n.cot_computed_length - tt) + sum_below * tt) +\n          count_below * tt * tt +\n          (n.cot_computed_length - tt) *\n            (n.cot_computed_length - tt) *\n            count_above;\n\n        if (score < current_min) {\n          current_location = n;\n          current_split = tt / n.cot_computed_length; //n.cot_computed_length-tt;//1 - tt / n.cot_computed_length;\n          current_min = score;\n        }\n\n        delete n.cot_computed_length;\n        delete n.cot_path_to_leaves_below;\n        delete n.cot_path_to_leaves_above;\n        delete n.cot_leaf_index;\n      }\n    });\n  } else {\n    // in the general case try a simple grid optimization\n    tree.traverse_and_compute(function(n) {\n      if (n.parent) {\n        // can't consider the root\n\n        var optimization_step =\n            n.cot_computed_length > 0.0 ? n.cot_computed_length * 0.05 : 0.1,\n          current_t = 0;\n\n        while (current_t < n.cot_computed_length) {\n          var score = 0.0;\n\n          _.each(n.cot_path_to_leaves_below, function(l) {\n            score += Math.pow(l + current_t, power);\n          });\n\n          _.each(n.cot_path_to_leaves_above, function(l) {\n            score += Math.pow(l + (n.cot_computed_length - current_t), power);\n          });\n\n          if (score < current_min) {\n            current_location = n;\n            current_split = current_t / n.cot_computed_length; //n.cot_computed_length-tt;//1 - tt / n.cot_computed_length;\n            current_min = score;\n          }\n          current_t += optimization_step;\n        }\n      }\n    });\n  }\n\n  return {\n    location: current_location,\n    breakpoint: current_split,\n    distance: current_min\n  };\n}\n","/**\n * Compute midpoint of a phylogenetic tree\n * \n * @param {Object} tree -- the phylotree.js tree object \n * @return {Object} the calculated midpoint to root on\n *  { location: root_node, breakpoint: 0 }\n *\n */\nexport function computeMidpoint(tree) {\n  if (!tree.hasBranchLengths()) {\n    throw \"Center of tree calculation cannot be performed on trees that do not have fully specified branch lengths\";\n  }\n\n  var bl = tree.branch_length;\n\n  tree.traverse_and_compute(function(node) {\n    if (node.parent) {\n      var my_longest_path_length = bl(node);\n      var my_longest_path_terminus;\n\n      if (tree.isLeafNode(node)) {\n        my_longest_path_terminus = node;\n        node.max_path = 0;\n        node.max_path_terminus = node;\n      } else {\n        my_longest_path_length += node.max_path;\n        my_longest_path_terminus = node.max_path_terminus;\n      }\n\n      if (\n        !node.parent.max_path ||\n        node.parent.max_path < my_longest_path_length\n      ) {\n        node.parent.max_path = my_longest_path_length;\n        node.parent.max_path_terminus = my_longest_path_terminus;\n      }\n    }\n  });\n\n  var root_node = tree.getRootNode();\n  var longest_path_length = 0;\n\n  root_node.children.forEach(function(root_child) {\n    if (root_child.max_path_terminus !== root_node.max_path_terminus) {\n      var pl = root_child.max_path + bl(root_child);\n      if (pl >= longest_path_length) {\n        longest_path_length = pl;\n      }\n    }\n  });\n\n  if (root_node.max_path > longest_path_length) {\n    // not already midpoint rooted\n    longest_path_length = (longest_path_length + root_node.max_path) * 0.5;\n\n    // start traversing up from the deepest leaf to the root, until we find the\n    // half-way point\n\n    var root_on = root_node.max_path_terminus;\n\n    while (true) {\n      var current_bl = bl(root_on);\n      //console.log (current_bl, longest_path_length);\n      if (current_bl <= longest_path_length) {\n        longest_path_length -= current_bl;\n        root_on = root_on.parent;\n      } else {\n        //console.log (\"Rooting on \", root_on, longest_path_length[0], current_bl);\n\n        return {\n          location: root_on,\n          breakpoint: longest_path_length / current_bl\n        };\n\n        //console.log (\"Longest \" + root_path (tree.getNodeByName(root_node.max_path_terminus.name)));\n        //console.log (\"Second longest \" + root_path (tree.getNodeByName(longest_path_length[1].name)));\n      }\n    }\n  }\n  return { location: root_node, breakpoint: 0 };\n}\n","import * as _ from \"underscore\";\n\nfunction annotateCopyNumber(tree) {\n  tree.traverse_and_compute(function(node) {\n    if (tree.isLeafNode(node)) {\n      node.data.copy_number = 1;\n    }\n  });\n}\n\n// internal function used by best root fitting\nfunction computeRootToTipOtherRoot(\n  tree,\n  node,\n  coming_from,\n  shared_distance,\n  distance_to_new_root\n) {\n\n  var my_bl = tree.branch_length(node);\n\n  var go_up = false;\n\n  if (!coming_from) {\n    shared_distance = node.data.rootToTip;\n    distance_to_new_root = 0;\n    go_up = true;\n  }\n\n  if (node.children) {\n    for (var c = 0; c < node.children.length; c++) {\n      if (node.children[c] != coming_from) {\n        computeRootToTipOtherRoot(\n          tree,\n          node.children[c],\n          node,\n          shared_distance,\n          distance_to_new_root\n        );\n      } else {\n        go_up = true;\n      }\n    }\n  }\n\n  node.data.rtta = node.data.rootToTip - shared_distance + distance_to_new_root;\n\n  if (go_up) {\n    shared_distance -= my_bl;\n    distance_to_new_root += my_bl;\n  }\n\n  if (node.parent && go_up) {\n    computeRootToTipOtherRoot(\n      tree,\n      node.parent,\n      node,\n      shared_distance,\n      distance_to_new_root\n    );\n  }\n}\n\nexport function fitRootToTip(tree) {\n\n  var linear_data = [],\n    max_r2 = 0,\n    best_node = 0;\n\n  annotateCopyNumber(tree);\n  rootToTip(tree);\n\n  // To return if best node is the root already\n  tree.traverse_and_compute(function(node) {\n    if (tree.isLeafNode(node) && !_.isNull(node.data.decimal_date_value)) {\n      linear_data.push([node.data.decimal_date_value, node.data.rtta, node.data.copy_number]);\n    }\n  });\n\n  let best_fit = linearFit(linear_data);\n\n  tree.traverse_and_compute(function(node) {\n\n    if (tree.isLeafNode(node) && !_.isNull(node.data.decimal_date_value)) {\n\n      computeRootToTipOtherRoot(tree, node, null, 0, 0);\n\n      linear_data = [];\n\n      tree.traverse_and_compute(function(node) {\n        if (tree.isLeafNode(node) && !_.isNull(node.data.decimal_date_value)) {\n          linear_data.push([\n            node.data.decimal_date_value,\n            node.data.rtta,\n            node.data.copy_number\n          ]);\n        }\n      });\n\n      var fit = linearFit(linear_data),\n        r2 = fit[\"r2\"];\n\n      if (r2 > max_r2) {\n        max_r2 = r2;\n        best_node = node;\n        best_fit = fit;\n      }\n\n    }\n  });\n\n  return { root: best_node, fit: best_fit };\n\n}\n\n// linear fit of root to tip distances\nfunction linearFit(data) {\n\n  var ss = data.reduce(function(p, c) {\n      return c[2] + p;\n    }, 0), // sample count\n    sx = data.reduce(function(p, c) {\n      return c[2] * c[0] + p;\n    }, 0), // sum X\n    sy = data.reduce(function(p, c) {\n      return c[2] * c[1] + p;\n    }, 0), // sum Y\n    sxoss = sx / ss,\n    syoss = sy / ss;\n\n  var fitB = 0,\n    st2 = 0,\n    vary = 0;\n\n  data.forEach(function(point) {\n    var t = point[0] - sxoss;\n    st2 += point[2] * t * t;\n    fitB += point[2] * t * point[1];\n    vary += point[2] * (point[1] - syoss) * (point[1] - syoss);\n  });\n\n  fitB /= st2;\n\n  var a = (sy - sx * fitB) / ss;\n\n  var varres = 0;\n\n  data.forEach(function(point) {\n    var t = point[1] - a - fitB * point[0];\n    varres += point[2] * t * t;\n  });\n\n  return {\n    intercept: a,\n    slope: fitB,\n    r2: 1 - varres / vary,\n    \"var (intercept)\": Math.sqrt((1 + sx * sx / (ss * st2)) / ss),\n    \"var (slope)\": Math.sqrt(1 / st2)\n  };\n}\n\n/**\n *   fast and memory efficient root to tip distance calculator\n *   for each leaf node stores the current root to tip distance in \n *   the node.rootToTip field\n *   \n *   @param tree\n *   @return tree with rootToTip computed\n *\n */\nexport default function rootToTip(tree) {\n\n  var bl = tree.branch_length_accessor,\n    index = 0;\n\n  tree.traverse_and_compute(n => {\n    if (n.parent) {\n      n.data._computed_length = bl(n);\n      if (!_.isNumber(n.data._computed_length)) {\n        throw \"rootToTip cannot be run on trees with missing branch lengths\";\n      }\n    }\n    if (tree.isLeafNode(n)) {\n      n.data.leaf_index = index++;\n    }\n    if (\"r2t\" in n.data) {\n      delete n.data.r2t;\n    }\n  });\n\n  tree.traverse_and_compute(n => {\n    if (n.parent) {\n      if (!(\"r2t\" in n.parent.data)) {\n        n.parent.data.r2t = {};\n      }\n      if (tree.isLeafNode(n)) {\n        n.parent.data.r2t[n.data.leaf_index] = n.data._computed_length;\n      } else {\n        _.each(n.data.r2t, function(v, idx) {\n          n.parent.data.r2t[idx] = v + n.data._computed_length;\n        });\n        delete n.data.r2t;\n      }\n      delete n.data._computed_length;\n    }\n  });\n\n  var r2t = tree.getRootNode().data.r2t;\n\n  tree.traverse_and_compute(n => {\n    if (tree.isLeafNode(n)) {\n      n.data.rootToTip = r2t[n.data.leaf_index] || 0;\n      delete n.data.leaf_index;\n    }\n  });\n\n  delete tree.getRootNode().data.r2t;\n\n  return tree;\n}\n","import * as d3 from \"d3\";\n\nconst default_date_converter = d3.timeParse(\"%Y%m%d\");\n\nconst default_regexp = /([0-9]{4}).?([0-9]{2}).?([0-9]{2})$/g;\n\nconst default_date_getter = function(node) {\n  if (d3.layout.phylotree.isLeafNode(node)) {\n    if (\"name\" in node) {\n      var location = default_regexp.exec(node.name);\n      if (location) {\n        return location[1] + location[2] + location[3];\n      }\n    }\n  }\n  return null;\n};\n\n/*\n *  Extracts dates from nodes using a provided callback (defaults supplied),\n *  and also converts them to decimal dates; missing dates are allowed; if desired, missing dates \n *  can throw exceptions \n *  \n *  @param tree             : the tree object \n *\n *  @param date_getter      : a function that extracts date strings from nodes (e.g. by parsing the name),\n *                            default is to extract from the end of the node name, using [YYYY] optional sep [MM] optional sep [DD] format;\n *                            default is implemented in phylotree_extensions.extract_dates.date_getter ()\n *                            \n *  @param date_converter   : if provided, will be used to parse the date string; default is %Y%m%d implemented in \n *                            phylotree_extensions.extract_dates.date_converter\n *  \n *  \n *  @return tree with date-annotated nodes, i.e. each node will have\n *  \n *      n.date_value (date object, e.g. 2018-08-17); null for missing\n *      n.decimal_date_value (decimal object, e.g. 2018.72)\n *  \n */\nconst extract_dates = function(tree, date_getter, date_converter=default_date_converter) {\n\n  date_getter = date_getter || default_date_getter;\n  \n  tree.traverse_and_compute(function(n) {\n    var d_string = date_getter(n);\n    if (d_string) {\n      try {\n        n.data.date_value = date_converter(d_string);\n        var full_year = n.data.date_value.getFullYear();\n        var year_start = new Date(full_year, 0, 1),\n          year_start_p1 = new Date(full_year + 1, 0, 1);\n\n        n.data.decimal_date_value =\n          full_year +\n          (n.data.date_value - year_start) / (year_start_p1 - year_start);\n        return;\n      } catch (e) {\n        // for conversion failures\n      }\n    }\n    n.data.date_value = null;\n    n.data.decimal_date_value = null;\n  });\n\n  return tree;\n};\n\nexport default extract_dates;\n","import * as _ from \"underscore\";\n\n/**\n * Implements a linear time / space version of the Cluster picker algorithm\n * \n * @param tree -- the tree object \n * @param bootstrap_thresold -- value in [0,1] that sets the stringency of bootstrap support\n * @param diameter_threshold -- value >=0 that defines the maximum allowable pairwise distance in a cluster\n * @param root_node -- if specified, traverse the tree starting here (useful for only looking at parts of the tree),\n * tree root by default\n * @param missing_bootstrap_value -- if a branch is missing bootstrap support value, use this value instead\n *                   (1.0 by default)\n *                                 \n * @return an array of clusters, where cluster = \n * \\{\n *    'root'   : [root node of cluster],\n *    'members' : [list of leaf. nodes],\n *    'diameter' : max distance in the cluster,\n *    'bootstrap' : bootstrap support at the root node\n * \\}                        \n */\nfunction clusterPicker(\n  tree,\n  bootstrap_threshold,\n  diameter_threshold,\n  root_node,\n  missing_bootstrap_value\n) {\n  root_node = root_node || tree.getRootNode();\n  missing_bootstrap_value = _.isNumber(missing_bootstrap_value)\n    ? missing_bootstrap_value\n    : 1;\n\n  // perform a bottom-up pass of the tree\n  // where each internal node will receive a floating point value\n  // that stores the longest path from the internal node to any of its descendants,\n  // the diameter of the cluster,  is then the sum of longest paths of all of its children\n  let bl = tree.branch_length;\n\n  // initialize member variables\n  tree.traverse_and_compute(function(n) {\n    if (n.parent) {\n      n._computed_length = bl(n);\n      if (!_.isNumber(n._computed_length)) {\n        throw \"clusterPicker cannot be run on trees with missing branch lengths\";\n      }\n      n.max_path_length = 0;\n    }\n  });\n\n  tree.traverse_and_compute(function(n) {\n    if (n.parent) {\n      n.parent.max_path_length = Math.max(\n        n.parent.max_path_length,\n        n.max_path_length + n._computed_length\n      );\n    }\n  });\n\n  var clusters = [];\n\n  tree.traverse_and_compute(_.noop, \"pre-order\", root_node, function(n) {\n    if (!tree.isLeafNode(n)) {\n      var bs = _.isString(n.data.bootstrap_values)\n        ? +n.data.bootstrap_values\n        : missing_bootstrap_value;\n\n      if (bs >= bootstrap_threshold) {\n        var my_diameter = _.reduce(\n          n.children,\n          function(c, n) {\n            return n.max_path_length + n._computed_length + c;\n          },\n          0\n        );\n\n        if (my_diameter <= diameter_threshold) {\n          clusters.push({ root: n, diameter: my_diameter, bootstrap: bs });\n          return true;\n        }\n      }\n    }\n\n    return false;\n  });\n\n  // clean up member variables\n  tree.traverse_and_compute(\n    function(n) {\n      if (n.parent) {\n        delete n._computed_length;\n        delete n.max_path_length;\n      }\n    },\n    \"post-order\",\n    root_node\n  );\n\n  _.each(clusters, function(cluster) {\n    cluster[\"members\"] = [];\n    tree.traverse_and_compute(\n      function(n) {\n        if (tree.isLeafNode(n)) {\n          cluster[\"members\"].push(n);\n        }\n      },\n      \"post-order\",\n      cluster[\"root\"]\n    );\n  });\n\n  return clusters;\n}\n\nexport default clusterPicker;\n","import * as _ from \"underscore\";\n\n/*\n *Implements a linear time / space version of the Phylopart algorithm\n *Nature Communications volume 2, Article number: 321 (2011)\n *\n *@param tree                 -- the tree object \n *\n *@param bootstrap_thresold -- value in [0,1] that sets the stringency of bootstrap support\n *\n *@param percentile threshold -- a value in 0-1, which is used to delineate how clusters\n *                               are defined; the actual criterion used is \n *        [approximate] median pairwise distance in a cluster <= %-le of tree-wide distribution \n *                               \n *@param missing_bootstrap_value -- if a branch is missing bootstrap support value, use this value instead\n *                    (1.0 by default)\n *                    \n *@param resolution -- the width of the bin for the histogram; by default is set to be the   \n *                     minimum of 0.001, branch length range / 100,\n *                     however, the maximum number of histogram bins is capped at 500 for \n *                     performance reasons\n *                                 \n *@return an array of clusters, where cluster = \n *{\n *    'root'              : [root node of cluster]\n *    'members'           : [list of leaf. nodes]\n *    'median'            : approximate median cluster distance,\n *    'bootstrap'         : bootstrap support at the root node\n *}                        \n */\n\nimport { default as pairwise_distances } from \"../metrics/pairwise-distances\";\n\nfunction phylopart(\n  tree,\n  bootstrap_threshold,\n  percentile_threshold,\n  missing_bootstrap_value,\n  resolution\n) {\n  /** TODO SLKP 20180817 : this implementation does not compute pairwise distances correctly at the moment;\n   instead it computes root-to-tip distances */\n  missing_bootstrap_value = _.isNumber(missing_bootstrap_value)\n    ? missing_bootstrap_value\n    : 1;\n\n  var leaf_count = pairwise_distances(tree);\n\n  /** first, decide on the domain of branch lengths **/\n\n  var core_node = tree.getRootNode().children[0];\n\n  var min_bl = Number.MAX_VALUE,\n    min_bl2 = Number.MAX_VALUE;\n\n  if (!(percentile_threshold > 0 && percentile_threshold < 1)) {\n    throw \"Invalid percentile threshold in perform_phylopart\";\n  }\n\n  tree.traverse_and_compute(function(n) {\n    if (tree.isLeafNode(n)) {\n      if (n.cot_computed_length < min_bl) {\n        if (min_bl < min_bl2) {\n          min_bl2 = min_bl;\n        }\n        min_bl = n.cot_computed_length;\n      } else {\n        if (n.cot_computed_length < min_bl2) {\n          min_bl2 = n.cot_computed_length;\n        }\n      }\n    }\n  });\n\n  min_bl += min_bl2;\n\n  // pairwise distances are bounded below by the sum of two shortest terminal branches\n\n  // compute the upper bound\n  var max_path_length =\n    _.reduce(\n      core_node.cot_path_to_leaves_below,\n      function(c, n) {\n        return n > c ? n : c;\n      },\n      0\n    ) +\n    _.reduce(\n      core_node.cot_path_to_leaves_above,\n      function(c, n) {\n        return n > c ? n : c;\n      },\n      0\n    ) +\n    core_node.cot_computed_length;\n\n  var domain = max_path_length - min_bl;\n\n  if (_.isUndefined(resolution)) {\n    resolution = Math.min(1e-3, domain / 100);\n  }\n\n  var number_of_bins = ((domain / resolution) >> 0) + 1;\n  if (number_of_bins > 500) {\n    number_of_bins = 500;\n    resolution = domain / number_of_bins;\n  }\n\n  var root_node = tree.getRootNode();\n\n  root_node.paths_to_leaves = new Array(leaf_count);\n\n  _.each(root_node.children, function(cn) {\n    _.each(root_node.cot_path_to_leaves_below, function(v, i) {\n      root_node.paths_to_leaves[i] = v + cn.cot_computed_length;\n    });\n  });\n\n  tree.traverse_and_compute(function(n) {\n    if (!tree.isLeafNode(n)) {\n      n.histogram = new Array(number_of_bins);\n      for (var i = 0; i < number_of_bins; i++) {\n        n.histogram[i] = 0;\n      }\n      if (n.parent) {\n        var index = 0;\n        n.paths_to_leaves = [];\n        _.each(n.cot_path_to_leaves_below, function(v, i) {\n          n.paths_to_leaves[index++] = v;\n        });\n      }\n    }\n    delete n.cot_path_to_leaves_above;\n    delete n.cot_path_to_leaves_below;\n  });\n\n  /**\n        for each internal node, produce a histogram of pairwise distances on sequences that are defined \n        by the subtree at that node\n        \n        this could be approximated (I think), by merging histograms of children\n    */\n\n  tree.traverse_and_compute(function(n) {\n    if (!tree.isLeafNode(n)) {\n      for (var n1 = 0; n1 < n.paths_to_leaves.length; n1++) {\n        for (var n2 = n1 + 1; n2 < n.paths_to_leaves.length; n2++) {\n          var sum = n.paths_to_leaves[n1] + n.paths_to_leaves[n2];\n          n.histogram[((sum - min_bl) / resolution) >> 0]++;\n        }\n      }\n      n.leaf_count = n.paths_to_leaves.length;\n\n      delete n.paths_to_leaves;\n    }\n  });\n\n  // compute the percentile distance cutoff\n\n  var total_comparisons =\n    (leaf_count - 1) * leaf_count / 2 * percentile_threshold;\n  var bin_i = 0;\n  for (\n    ;\n    bin_i < number_of_bins - 1 &&\n    total_comparisons > root_node.histogram[bin_i];\n    bin_i++\n  ) {\n    total_comparisons -= root_node.histogram[bin_i];\n  }\n\n  var median_threshold =\n    min_bl +\n    (bin_i +\n      (root_node.histogram[bin_i] - total_comparisons) /\n        root_node.histogram[bin_i]) *\n      resolution;\n\n  var clusters = [];\n\n  tree.traverse_and_compute(_.noop, \"pre-order\", null, function(n) {\n    if (!tree.isLeafNode(n)) {\n      var bs = _.isString(n.data.bootstrap_values)\n        ? +n.data.bootstrap_values\n        : missing_bootstrap_value;\n      if (bs >= bootstrap_threshold) {\n        var total_comparisons = n.leaf_count * (n.leaf_count - 1) * 0.25;\n\n        var bin_i = 0;\n        for (\n          ;\n          bin_i < number_of_bins - 1 && total_comparisons > n.histogram[bin_i];\n          bin_i++\n        ) {\n          total_comparisons -= n.histogram[bin_i];\n        }\n\n        var my_median =\n          min_bl +\n          (bin_i +\n            (n.histogram[bin_i] - total_comparisons) / n.histogram[bin_i]) *\n            resolution;\n\n        if (my_median <= median_threshold) {\n          clusters.push({ root: n, median: my_median, bootstrap: bs });\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n\n  tree.traverse_and_compute(function(n) {\n    if (!tree.isLeafNode(n)) {\n      if (\"histogram\" in n) {\n        delete n.histogram;\n        delete n.leaf_count;\n      }\n    }\n  });\n\n  _.each(clusters, function(cluster) {\n    cluster[\"members\"] = [];\n    tree.traverse_and_compute(\n      function(n) {\n        if (tree.isLeafNode(n)) {\n          cluster[\"members\"].push(n);\n        }\n      },\n      \"post-order\",\n      cluster[\"root\"]\n    );\n  });\n\n  return clusters;\n}\n\nexport default phylopart;\n"],"names":["_","nexus_parser","d3","shiftTip","nodeSpan","selectionCallback","events.triggerRefresh","events.countUpdate","constant","events.d3PhylotreeAddEventListener","render_nodes.isNodeCollapsed","render_edges.edgeCssSelectors","render_edges.edgeVisible","render_nodes.nodeCssSelectors","render_nodes.nodeVisible","render_nodes.nodeNotshown","parser_registry","node_operations.isLeafNode","pairwise_distances"],"mappings":"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"}